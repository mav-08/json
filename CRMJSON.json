{
  "openapi": "3.0.0",
  "info": {
    "title": "CRM 7 REST API",
    "description": "Service for accessing customer data records and related reference data.\n\nSECURITY\nCaller authorization is managed through the validation of 2 independent\nproperties of the caller's identity.\n\n1. Store Number (Retail Location ID) identifies the location where the\ncalling application is being used, and defines the divisional data security\napplied to the data request.\n2. Sales Associate Number identifies the end user of the calling application,\nand is the identity associated in the audit trail with any data modifications.\n\nThese 2 properties of the caller's identity are not required for all paths.\nWhen required, the properties must be provided to the service using HTTP\nheaders submitted with the request.\n",
    "version": "3.05 (CRM 2021.2.0)",
    "contact": {
      "name": "Aptos Development"
    },
    "license": {
      "name": "Copyright (c) Aptos, 2019-2021. All rights reserved."
    }
  },
  "tags": [
    {
      "name": "Customer",
      "description": "Customer data records"
    },
    {
      "name": "Customer - Reference Data",
      "description": "Lists of type codes and other basic reference data used to validate data records"
    },
    {
      "name": "Loyalty",
      "description": "Loyalty plan definitions, customer memberships, and customer reward activity history"
    },
    {
      "name": "Loyalty - Reference Data",
      "description": "Lists of type codes and other basic reference data used to validate data records"
    },
    {
      "name": "Transaction",
      "description": "Transaction history"
    },
    {
      "name": "Transaction - Reference Data",
      "description": "Lists of type codes and other basic data referenced by transaction history"
    },
    {
      "name": "Admin",
      "description": "Administrative services used to manage the service"
    }
  ],
  "servers": [
    {
      "url": "https://example.com/",
      "variables": {}
    }
  ],
  "paths": {
    "/v3/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomer",
        "description": "Create a new customer record.",
        "operationId": "createCustomer",
        "parameters": [
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\n\nCallerDivisionWithPrimaryContactsOnly indicates that divisional data will be returned for the\ncalling division only, regardless of any cross-divisional permissions.  In addition, only emails,\naddress, phones that are marked as primary in the calling division will be returned.\n\nIf no values is provided, no data filter will be applied beyond the standard divisional filtering.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Customer record to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "X-Aptos-HouseholdUpdateError": {
                "description": "Indicates when the household information could not be updated.\nThe detailed error message is provided in the header.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/searchResults": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "searchCustomers",
        "description": "Search for customer records.",
        "operationId": "searchCustomers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to return.\nIf no limit is provided, the default service configuration returns 25 records.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current response.\nIf no offset is provided, the service defaults to 0 and the response begins with the first record.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sort order for pagination pattern.  Append ' desc' to a field name to sort descending.\nAvailable fields are customerNumber, lastName, mainAddress.postalCode,\nmainEmail.emailAddress, mainPhone.phoneNumber.\nWhen not specified, the default service configuration is 'lastName, customerNumber desc'.\nWhen a secondary sort is not specified, the sort field 'customerNumber desc' is appended\nif the customerNumber field is not already used in the orderBy expression.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Criteria for which to search for customers",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSearchParameters"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerByNumber",
        "description": "Retrieve a customer record.",
        "operationId": "getCustomerByNumber",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\n\nCallerDivisionWithPrimaryContactsOnly indicates that divisional data will be returned for the\ncalling division only, regardless of any cross-divisional permissions.  In addition, only emails,\naddress, phones that are marked as primary in the calling division will be returned.\n\nIf no values is provided, no data filter will be applied beyond the standard divisional filtering.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "altKeyTypeCode",
            "in": "query",
            "description": "Codes of the types of alternate keys to be included in the response.\nIf no type codes are specified, all alternate keys will be returned.\nOnly applicable if alternate keys are included in the response resource.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activitySummaryMode",
            "in": "query",
            "description": "The summary level to apply to the activity statistics. \nRequired when activity summary is included in the response resource.\nOnly applicable if activity summary is included in the response resource.\n",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "SalesChannel",
                "Last12Months",
                "Store",
                "Week",
                "Month",
                "Quarter",
                "HalfYear",
                "Year",
                "Year-Store",
                "Year-Week",
                "Year-Month",
                "Year-Quarter",
                "Year-HalfYear",
                null
              ]
            }
          },
          {
            "name": "activitySummaryOccurrences",
            "in": "query",
            "description": "If absent, default to false which means that activity summary\noccurrence model is excluded from the response.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activitySummaryDataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\nIf no filter is passed, then default to the data corresponding to the division of the calling \nstore PLUS any other divisions that are allowed based on the cross-divisional permissions. \nIf the cross-divisional security permissions do not provide access to other divisions, then these\ntwo settings will return the same data..\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "activitySummarySalesChannel",
            "in": "query",
            "description": "Codes of the sales channels by which to restrict the activity statistics\nOnly applicable if activity summary is included in the response resource.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activitySummaryLimit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records per page.  \nIf no limit is provided, the default service configuration returns 25 records per page. \nOnly applicable if activity summary is included in the response resource.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activitySummaryOffset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current page.  \nIf no offset is provided, the service defaults to 0 and returns the first page of results. \nOnly applicable if activity summary is included in the response resource.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activitySummarySequence",
            "in": "query",
            "description": "System orders the data as requested based on the 'mode' selected.\nOnly applicable if activity summary is included in the response resource.\n",
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomer",
        "description": "Update an existing customer record using either a regular object PATCH or a JSON Patch (RFC6902).\n\nWhen using regular object PATCH (request media type \"application/json\"),\nuse [BLANK] to clear the saved value for optional text fields.\nWhen using JSON Patch (request media type \"application/json-patch+json\"),\nuse a \"REMOVE\" operation instead. It is also possible to use \"REPLACE\" with \nNULL to clear out attribute dates and numeric values. \nIn either case, use \"1900-01-01\" to clear the saved value for birth date.\n\nAn update to a customer who is not in the calling store's division\nbut was accessible because of cross-divisional permissions will\nresult in the customer being added to the new division.\n\nThis route supports batch updates to any number of linked existing\naddress, email, and phone resources.\nThe JSON object PATCH does not support creating or deleting linked\nresources, but the JSON Patch does allow adding new and removing\nexisting linked resources.\n\nFor JSON Patch, minimal testing requirements for all changes are enforced\nto ensure the data being changed is what the caller expects to change.\nThis means that a test operation should precede every replace/remove operation.\n",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\nCallerDivisionWithPrimaryContactsOnly indicates that divisional data will be returned for the\ncalling division only, regardless of any cross-divisional permissions.  In addition, only emails,\naddress, phones that are marked as primary in the calling division will be returned.\n\nIf no values is provided, no data filter will be applied beyond the standard divisional filtering.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "altKeyTypeCode",
            "in": "query",
            "description": "Codes of the types of alternate keys to be included in the response.\nIf no type codes are specified, all alternate keys will be returned.\nOnly applicable if alternate keys are included in the response resource.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Customer record to update or RFC6902 JSON Patch request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "op",
                    "path"
                  ],
                  "properties": {
                    "op": {
                      "type": "string",
                      "description": "The operation to perform. MOVE and COPY are not supported.\nCase-insensitive.\n",
                      "enum": [
                        "TEST",
                        "ADD",
                        "REPLACE",
                        "REMOVE"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "description": "The JSON Pointer (RFC6901) to the data in the customer model\nthat is affected by or referenced by this operation.\nADD in collections is only permitted at the end.\n",
                      "example": "/addresses/0/postalCode"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value to compare to or add or replace. May be a single value\nof the appropriate data type, or a JSON object if the path references an object,\nexcept that a submodel object (e.g. an address) in a collection\ncannot be REPLACEd as a unit.\nNot needed for REMOVE.\n",
                      "example": "12345"
                    },
                    "from": {
                      "type": "string",
                      "description": "Used by MOVE and COPY, which are not supported.\n"
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-HouseholdUpdateError": {
                "description": "Indicates when the household information could not be updated.\nThe detailed error message is provided in the header.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/address": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAddresses",
        "description": "Retrieve customer addresses.",
        "operationId": "getCustomerAddresses",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return addresses",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerAddresses",
        "description": "Create new customer addresses.\nDepending on unique settings and consolidation rules, new\naddresses may be merged with existing addresses.\n",
        "operationId": "createCustomerAddresses",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new addresses",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Addresses to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "description": "Addresses to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/address/{addressId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAddress",
        "description": "Retrieve a customer address.",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerAddress",
        "description": "Update a customer address.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Address to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerAddress",
        "description": "Delete a customer address.",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete an address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "X-Aptos-DivisionalPrimaryContactChanged": {
                "description": "Indicates whether the email address which was deleted was\nprimary for one or more divisions, causing automatic\nassignment of a new primary email during the delete operation\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/address/{addressId}/optIn": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAddressOptins",
        "description": "Retrieve the address opt-ins for a customer address.",
        "operationId": "getCustomerAddressOptins",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return the address opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address for which to return the address opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressOptInList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/address/{addressId}/optIn/{divisionCode}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAddressOptin",
        "description": "Retrieve a customer address opt-in.",
        "operationId": "getCustomerAddressOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address for which to return an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to return an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressOptIn"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerAddressOptin",
        "description": "Update a customer address opt-in.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerAddressOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address for which to update an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to update an address opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Customer address opt-in to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressOptIn"
              }
            }
          },
          "required": false,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/alternateKey": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAlternateKeys",
        "description": "Retrieve alternate keys for a customer.",
        "operationId": "getCustomerAlternateKeys",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return alternate keys",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altKeyTypeCode",
            "in": "query",
            "description": "Type code of the alternate keys to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKeyList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerAlternateKeys",
        "description": "Create new customer alternate keys.\nDepending on unique settings and consolidation rules, new\nalternate keys may be merged with existing alternate keys.\n",
        "operationId": "createCustomerAlternateKeys",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new alternate keys",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Alternate keys to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AlternateKey"
                },
                "description": "Alternate keys to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKeyList"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKeyList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/alternateKey/{alternateKeyId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAlternateKey",
        "description": "Retrieve a customer alternate key.",
        "operationId": "getCustomerAlternateKey",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an alternate key",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternateKeyId",
            "in": "path",
            "description": "ID of the alternate key to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKey"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerAlternateKey",
        "description": "Update a customer alternate key.",
        "operationId": "updateCustomerAlternateKey",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an alternate key",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternateKeyId",
            "in": "path",
            "description": "ID of the alternate key to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Alternate key to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternateKey"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKey"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerAlternateKey",
        "description": "Delete a customer alternate key.",
        "operationId": "deleteCustomerAlternateKey",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete an alternate key",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternateKeyId",
            "in": "path",
            "description": "ID of the alternate key to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/alternateKey/type/{altKeyTypeCode}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerAlternateKeysByType",
        "description": "Delete customer alternate keys by type.",
        "operationId": "deleteCustomerAlternateKeysByType",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete alternate keys",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altKeyTypeCode",
            "in": "path",
            "description": "Type code of the alternate keys to delete.  This may delete multiple\nalternate keys in a single pass.\n",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/attribute": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAttributes",
        "description": "Retrieve attributes for a customer",
        "operationId": "getCustomerAttributes",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return attributes",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeGroupCode",
            "in": "query",
            "description": "Group code of the attributes to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerAttributes",
        "description": "Create new customer attributes.\nDepending on unique settings and consolidation rules, new\nattributes may be merged with existing attributes.\n",
        "operationId": "createCustomerAttributes",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new attributes",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Attributes to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attribute"
                },
                "description": "Attributes to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeList"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/attribute/{attributeId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerAttribute",
        "description": "Retrieve a customer attribute.",
        "operationId": "getCustomerAttribute",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an attribute",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "ID of the attribute to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerAttribute",
        "description": "Update a customer attribute.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerAttribute",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an attribute",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "ID of the attribute to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Attribute to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerAttribute",
        "description": "Delete a customer attribute.",
        "operationId": "deleteCustomerAttribute",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete an attribute",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "description": "ID of the attribute to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/attribute/group/{attributeGroupCode}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerAttributesByGroup",
        "description": "Delete customer attributes by group.",
        "operationId": "deleteCustomerAttributesByGroup",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete attributes",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeGroupCode",
            "in": "path",
            "description": "Group code of the attributes to delete.  This may delete multiple attributes\nin a single pass.\n",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/email": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerEmails",
        "description": "Retrieve customer email addresses.",
        "operationId": "getCustomerEmails",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return email addresses",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerEmails",
        "description": "Create new customer email addresses.\nDepending on unique settings and consolidation rules, new\nemail addresses may be merged with existing email addresses.\n",
        "operationId": "createCustomerEmails",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new email addresses",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Email addresses to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Email"
                },
                "description": "Email addresses to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/email/{emailId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerEmail",
        "description": "Retrieve a customer email address.",
        "operationId": "getCustomerEmail",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an email address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerEmail",
        "description": "Update a customer email address.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerEmail",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an email address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Email address to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerEmail",
        "description": "Delete a customer email address.",
        "operationId": "deleteCustomerEmail",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete an email address",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "X-Aptos-DivisionalPrimaryContactChanged": {
                "description": "Indicates whether the email address which was deleted was\nprimary for one or more divisions, causing automatic\nassignment of a new primary email during the delete operation.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/email/{emailId}/optIn": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerEmailOptins",
        "description": "Retrieve the email opt-ins for a customer email address.",
        "operationId": "getCustomerEmailOptins",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return the email opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address for which to return email opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailOptInList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/email/{emailId}/optIn/{divisionCode}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerEmailOptin",
        "description": "Retrieve a customer email address opt-in.",
        "operationId": "getCustomerEmailOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return an email opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address for which to return an email opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to return an email opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailOptIn"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerEmailOptin",
        "description": "Update a customer email address opt-in.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerEmailOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update an email opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "ID of the email address for which to update an opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to update an email opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Customer email address opt-in to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailOptIn"
              }
            }
          },
          "required": false,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/phone": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerPhones",
        "description": "Retrieve customer phone numbers.",
        "operationId": "getCustomerPhones",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return phone numbers",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerPhones",
        "description": "Create new customer phone numbers.\nDepending on unique settings and consolidation rules, new\nphone numbers may be merged with existing phone numbers.\n",
        "operationId": "createCustomerPhones",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new phone numbers",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Phone numbers to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Phone"
                },
                "description": "Phone numbers to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/phone/{phoneId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerPhone",
        "description": "Retrieve a customer phone number.",
        "operationId": "getCustomerPhone",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return a phone number",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerPhone",
        "description": "Update a customer phone number.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerPhone",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update a phone number",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Phone number to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Phone"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "deleteCustomerPhone",
        "description": "Delete a customer phone number.",
        "operationId": "deleteCustomerPhone",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer from whom to delete a phone number",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "headers": {
              "X-Aptos-DivisionalPrimaryContactChanged": {
                "description": "Indicates whether the email address which was deleted was\nprimary for one or more divisions, causing automatic\nassignment of a new primary email during the delete operation.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/phone/{phoneId}/optIn": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerPhoneOptins",
        "description": "Retrieve the phone opt-ins for a customer phone number.",
        "operationId": "getCustomerPhoneOptins",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return the phone opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number for which to return phone opt-ins",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneOptInList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/phone/{phoneId}/optIn/{divisionCode}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerPhoneOptin",
        "description": "Retrieve a customer phone opt-in.",
        "operationId": "getCustomerPhoneOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number for which to return a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to return a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Aptos-CustomerNumberHasChanged": {
                "description": "Indicates when the customer number in the request no longer exists\nand has been replaced by a new number.\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneOptIn"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "summary": "updateCustomerPhoneOptin",
        "description": "Update a customer phone opt-in.\nUse [BLANK] to clear the saved value for optional text fields.\n",
        "operationId": "updateCustomerPhoneOptin",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to update a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "ID of the phone number for which to update a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionCode",
            "in": "path",
            "description": "Code of the division for which to update a phone opt-in",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Customer phone opt-in to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneOptIn"
              }
            }
          },
          "required": false,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/activity/occurrence": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerActivityOccurrence",
        "description": "Retrieve activity occurrence statistics for a customer.\n",
        "operationId": "getCustomerActivityOccurrence",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return activity statistics",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\nIf no filter is passed, then default to the data corresponding to the division of the calling \nstore PLUS any other divisions that are allowed based on the cross-divisional permissions. \nIf the cross-divisional security permissions do not provide access to other divisions, then these\ntwo settings will return the same data.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "salesChannel",
            "in": "query",
            "description": "Codes of the sales channels by which to restrict the activity statistics",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderSequence",
            "in": "query",
            "description": "The summary level to apply to the activity statistics",
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records per page.  \nIf no limit is provided, the default service configuration returns 25 records per page. \n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current response.\nIf no offset is provided, the service defaults to 0 and the response begins with the first record.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityOccurrenceResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/customer/{customerNumber}/activity/summary/{mode}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "getCustomerActivitySummary",
        "description": "Retrieve activity summary statistics for a customer. \n",
        "operationId": "getCustomerActivitySummary",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return activity statistics",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "path",
            "description": "The summary level to apply to the activity statistics",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "enum": [
                "SalesChannel",
                "Last12Months",
                "Store",
                "Week",
                "Month",
                "Quarter",
                "HalfYear",
                "Year",
                "Year-Store",
                "Year-Week",
                "Year-Month",
                "Year-Quarter",
                "Year-HalfYear",
                "ThisYear"
              ]
            }
          },
          {
            "name": "salesChannel",
            "in": "query",
            "description": "Codes of the sales channels to which to restrict the activity statistics",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderSequence",
            "in": "query",
            "description": "System orders the data as requested based on the 'mode' selected.",
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\nIf no filter is passed, then default to the data corresponding to the division of the calling \nstore PLUS any other divisions that are allowed based on the cross-divisional permissions. \nIf the cross-divisional security permissions do not provide access to other divisions, then these\ntwo settings will return the same data.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records per page.  \nIf no limit is provided, the default service configuration returns 25 records per page. \n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current response.\nIf no offset is provided, the service defaults to 0 and the response begins with the first record.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/customer/{customerNumber}/interaction": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieve interactions for a customer.",
        "description": "Retrieve interactions for a customer.",
        "operationId": "getCustomerInteractions",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Number of the customer for whom to return interactions"
          },
          {
            "name": "interactionID",
            "description": "IDs of the interactions to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "externalInteractionCode",
            "description": "The external interaction codes to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "eventID",
            "description": "The event IDs to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "eventCode",
            "description": "The event codes to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "firstOccurrencefromDate",
            "description": "Beginning first occurrence date for which to return interactions",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "lastOccurrencefromDate",
            "description": "Beginning last occurrence date for which to return interactions\n",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "interactionFromDate",
            "description": "Filters interaction details and headers based on the detail-level\ninteraction date.\n",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "latestXDetails",
            "description": "The maximum number of interaction detail rows to return for each header, starting from the most recent.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "dataFilter",
            "in": "query",
            "description": "CallerDivisionOnly indicates that divisional data will be returned for the calling division only,\nregardless of any cross-divisional permissions.\nIf no filter is passed, then default to the data corresponding to the division of the calling \nstore PLUS any other divisions that are allowed based on the cross-divisional permissions. \nIf the cross-divisional security permissions do not provide access to other divisions, then these\ntwo settings will return the same data.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/dataFilter"
            }
          },
          {
            "name": "limit",
            "description": "Standard pagination pattern.  Number of records per page. \nIf no limit is provided, the default service configuration returns 25 records per page.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "offset",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current page. \nIf no offset is provided, the service defaults to 0 and returns the first page of results.\n",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "description": "Sort order for pagination pattern.  Append ' desc' to a field name to sort descending.  \nAvailable fields are customerInteractionID, interactionID, lastOccurenceDate, firstOccurrenceDate, eventID.\nWhen not specified, the default service configuration \nis 'customerInteractionID desc'.\n",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fields",
            "description": "The fields to return in the response.  When not specified, all fields are returned.\n",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "description": "A UUID generated by the client for each request, to help correlate logged activity on the backend for troubleshooting and auditing purposes.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "description": "The number of the store (retail location) from which the call originated\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "description": "The number of the sales associate for whom the call was originated\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInteractionResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "createCustomerInteractions",
        "description": "Create new customer interactions. \n",
        "operationId": "createCustomerInteractions",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new phone numbers",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoCreateInteractionDefinition",
            "in": "query",
            "description": "Indicates whether interaction definitions should be auto-created if they\ndo not already exist.\nIf not provided, the default is to return an error if the interaction\ndoes not exist.\n",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Interactions to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Interaction"
                },
                "description": "Interactions numbers to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionList"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/addressType": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefAddressType",
        "description": "Retrieve all address types.",
        "operationId": "getRefAddressType",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/alternateKeyType": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "Retrieve all alternate key types",
        "description": "Retrieve all alternate key types",
        "operationId": "Retrieveallalternatekeytypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternateKeyTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/attributeGroupDefinition": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "Retrieve all attribute group definitions",
        "description": "Retrieve all attribute group definitions",
        "operationId": "Retrieveallattributegroupdefinitions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeGroupDefinitionList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/countryConfiguration": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCountryConfiguration",
        "description": "Retrieve all country configurations.",
        "operationId": "getRefCountryConfiguration",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryConfigurationList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerGender": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerGender",
        "description": "Retrieve all customer genders.",
        "operationId": "getRefCustomerGender",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGenderList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerLanguage": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerLanguage",
        "description": "Retrieve all customer languages.",
        "operationId": "getRefCustomerLanguage",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLanguageList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerMaritalStatus": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerMaritalStatus",
        "description": "Retrieve all customer marital statuses.",
        "operationId": "getRefCustomerMaritalStatus",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerMaritalStatusList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerTitle": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerTitle",
        "description": "Retrieve all customer titles.",
        "operationId": "getRefCustomerTitle",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerTitleList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerValidationSettings": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerValidationSettings",
        "description": "Retrieve all customer data validation settings, including the complete customer criteria configurations.",
        "operationId": "getRefCustomerValidationSettings",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerValidationSettings"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/emailType": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefEmailType",
        "description": "Retrieve all email types.",
        "operationId": "getRefEmailType",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/phoneType": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefPhoneType",
        "description": "Retrieve all phone types.",
        "operationId": "getRefPhoneType",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/customerSegmentDefinition": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefCustomerSegmentDefinition",
        "description": "Retrieve all customer segment definitions.",
        "operationId": "getRefCustomerSegmentDefinition",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDefinition"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/activityLabels/occurrence": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefActivityOcurrenceLabels",
        "description": "Retrieve activity occurrence field labels",
        "operationId": "getRefActivityOcurrenceLabels",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityOccurrenceLabels"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/activityLabels/summary": {
      "get": {
        "tags": [
          "Customer - Reference Data"
        ],
        "summary": "getRefActivitySummaryLabels",
        "description": "Retrieve activity summary field labels",
        "operationId": "getRefActivitySummaryLabels",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySummaryLabels"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/ref/interactionDefinition": {
      "get": {
        "tags": [
          "Interaction - Reference Data"
        ],
        "summary": "Retrieve all interaction definitions.",
        "operationId": "getRefInteractionDefinitions",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activationDateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interactionId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false
          },
          {
            "name": "externalInteractionCode",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "interactionType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionDefinitionList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Interaction - Reference Data"
        ],
        "summary": "createInteractionDefinition",
        "description": "Create new interaction definition.\n",
        "operationId": "createInteractionDefinition",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Interaction definition to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InteractionDefinition"
                },
                "description": "Addresses to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionDefinitionList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/interactionEvent": {
      "get": {
        "tags": [
          "Interaction - Reference Data"
        ],
        "summary": "Retrieve all interaction events.",
        "operationId": "getRefInteractionEvents",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionEventList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/ref/interactionSubType": {
      "get": {
        "tags": [
          "Interaction - Reference Data"
        ],
        "summary": "Retrieve all interaction sub-types.",
        "operationId": "getRefInteractionSubTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionSubTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/ref/interactionType": {
      "get": {
        "tags": [
          "Interaction - Reference Data"
        ],
        "summary": "Retrieve all interaction types.",
        "operationId": "getRefInteractionTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/customer/{customerNumber}/loyaltyMembership": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "getCustomerLoyaltyMemberships",
        "description": "Search for loyalty plan memberships for a specific customer",
        "operationId": "getCustomerLoyaltyMemberships",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to return loyalty plan memberships",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "membershipStatus",
            "in": "query",
            "description": "Membership statuses of the memberships to be returned",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Active",
                  "PendingDowngrade",
                  "PendingTermination",
                  "Terminated"
                ]
              }
            }
          },
          {
            "name": "loyaltyPlanId",
            "in": "query",
            "description": "IDs of the loyalty plans for which to return memberships",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembershipList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/loyaltyMembership/enrollment": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "postCustomerLoyaltyMembershipEnrollment",
        "description": "Create new loyalty plan memberships",
        "operationId": "postCustomerLoyaltyMembershipEnrollment",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to create new loyalty plan memberships",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Loyalty plan memberships to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoyaltyMembershipModificationRequest"
                },
                "description": "Loyalty plan memberships to create"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembership"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "409": {
            "description": "Conflict or Validation Failure"
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/loyaltyMembership/modification": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "postCustomerLoyaltyMembershipModification",
        "description": "Modify existing loyalty plan memberships",
        "operationId": "postCustomerLoyaltyMembershipModification",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to modify loyalty plan memberships",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Loyalty plan memberships to modify",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoyaltyMembershipModificationRequest"
                },
                "description": "Loyalty plan memberships to modify"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembership"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/loyaltyMembership/renewal": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "postCustomerLoyaltyMembershipRenewal",
        "description": "Renew existing loyalty plan memberships",
        "operationId": "postCustomerLoyaltyMembershipRenewal",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to renew loyalty plan memberships",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Loyalty plan memberships to renew",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoyaltyMembershipModificationRequest"
                },
                "description": "Loyalty plan memberships to renew"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembership"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/customer/{customerNumber}/loyaltyMembership/termination": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "postCustomerLoyaltyMembershipTermination",
        "description": "Terminate existing loyalty plan memberships and expire all points.",
        "operationId": "postCustomerLoyaltyMembershipTermination",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "Number of the customer for whom to terminate loyalty plan memberships",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loyaltyPlanId",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembership"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "getLoyaltyTransactions",
        "description": "Retrieve loyalty transactions",
        "operationId": "getLoyaltyTransactions",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Number of the customer for whom to return loyalty transactions",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loyaltyPlanId",
            "in": "query",
            "description": "IDs of loyalty plans for which to return loyalty transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "loyaltyTransactionCategory",
            "in": "query",
            "description": "Categories of the loyalty transactions to return.  If none are provided,\nall will be included.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Adjustment",
                  "Redemption",
                  "Sale",
                  "Reversal",
                  "PendingSale"
                ]
              }
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Beginning date for which to return loyalty transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Ending date for which to return loyalty transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to return.\nIf no limit is provided, the default service configuration returns 25 records.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current response.\nIf no offset is provided, the service defaults to 0 and the response begins with the first record.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sort order for pagination pattern.  Append ' desc' to a field name to sort descending.\nAvailable fields are loyaltyTransactionId, transactionDate, transactionId.\nWhen not specified, the default service configuration is 'loyaltyTransactionId desc'.\nWhen a secondary sort is not specified, the sort field 'loyaltyTransactionId desc' is appended\nif the loyaltyTransactionId field is not already used in the orderBy expression.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields\nare returned, EXCEPT the auto-redemption, redemption,\nand coupon models.  Those models must be explicitly requested.\nSet to '[ALL]' to include all available fields in the response.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/{id}": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "getLoyaltyTransactionById",
        "description": "Retrieve a loyalty transaction",
        "operationId": "getLoyaltyTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the loyalty transaction to return.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/adjustment": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "createLoyaltyTransactionAdjustment",
        "description": "Post an adjustment on a customer's loyalty membership.",
        "operationId": "createLoyaltyTransactionAdjustment",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, loyalty\ntransaction and membership information will be returned.\nSet to '[ALL]' to return all available fields.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Adjustment information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyAdjustmentRequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/redemption": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "createLoyaltyTransactionRedemption",
        "description": "Post a stand-alone redemption unrelated to any transaction.  These redemptions\nwill never be automatically reversed by a return since they have no link to\nany transaction.\nTo post a redemption with linked transaction information, use the\nloyaltyTransaction/transaction path such that a basket can be submitted\ntogether with the redemptions.\n",
        "operationId": "createLoyaltyTransactionRedemption",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, loyalty\ntransaction and membership information will be returned.\nSet to '[ALL]' to return all available fields.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Redemption information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyRedemptionRequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/redemptionReversal": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "createLoyaltyTransactionRedemptionReversal",
        "description": "Manually reverse a stand-alone redemption.",
        "operationId": "createLoyaltyTransactionRedemptionReversal",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, loyalty\ntransaction and membership information will be returned.\nSet to '[ALL]' to return all available fields.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Reversal information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyRedemptionReversalRequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/transaction": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "createLoyaltyTransactionTransaction",
        "description": "Calculate and/or post new pending loyalty transactions, with or without\nredemptions.\n\nThe real-time point setting for the store in CRM governs whether the\ntransaction basket will be posted or used only for redemption evaluation\nand subsequent reconciliation.\n\nThe real-time redemption setting for the store in CRM governs whether\nredemptions may be posted.\n",
        "operationId": "createLoyaltyTransactionTransaction",
        "parameters": [
          {
            "name": "evaluateOnly",
            "in": "query",
            "description": "Indicates whether the transaction is being submitted for evaluation\nonly, or whether it should post permanently to the customer record.\n\nWhen set to Yes, the system will compute and return the expected\npoints earned by the transaction, the expected new memberships,\nqualifying automatic redemptions, available manual redemptions, and\navailable coupons, but none of this will be permanently posted into the\ndatabase. A transaction may be submitted for evaluation many times\nif desired.\n\nA transaction should only be posted (with evaluationOnly set to No) after the\ncustomer has completed and confirmed the transaction or order, which\ngenerally includes a form of payment.\n",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Input data to create loyalty transactions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyTransactionRequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "200": {
            "description": "Evaluated",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResult"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/loyaltyTransaction/transactionReversal": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "createLoyaltyTransactionTransactionReversal",
        "description": "Reverse or post-void a pending loyalty transaction.",
        "operationId": "createLoyaltyTransactionTransactionReversal",
        "parameters": [
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Reversal information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyTransactionReversalRequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict or Validation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/loyaltyMembershipAction": {
      "get": {
        "tags": [
          "Loyalty - Reference Data"
        ],
        "summary": "getRefLoyaltyMembershipAction",
        "description": "Retrieve all possible membership action codes",
        "operationId": "getRefLoyaltyMembershipAction",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembershipActionCodeList"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/loyaltyPlan": {
      "get": {
        "tags": [
          "Loyalty - Reference Data"
        ],
        "summary": "getRefLoyaltyPlan",
        "description": "Retrieve all loyalty plan definitions",
        "operationId": "getRefLoyaltyPlan",
        "parameters": [
          {
            "name": "loyaltyPlanId",
            "in": "query",
            "description": "IDs of the loyalty plans to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "activeOnly",
            "in": "query",
            "description": "Indicates whether to include only active plans.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "defaultPlanOnly",
            "in": "query",
            "description": "When true include only the plan that is marked as the default plan for the calling store's division.\nWhen false or not provided, then do not filter plans based on whether they are the default or not.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPlanList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/loyaltyPlan/{id}": {
      "get": {
        "tags": [
          "Loyalty - Reference Data"
        ],
        "summary": "getRefLoyaltyPlanById",
        "description": "Retrieve a loyalty plan definition",
        "operationId": "getRefLoyaltyPlanById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the loyalty plan for which to return the definition",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPlan"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/rewardReason": {
      "get": {
        "tags": [
          "Loyalty - Reference Data"
        ],
        "summary": "getRefRewardReasons",
        "description": "Retrieve Reward Reason Type definitions",
        "operationId": "getRefRewardReasons",
        "parameters": [
          {
            "name": "loyaltyPlanId",
            "in": "query",
            "description": "ID of the loyalty plans for which to return the reward reasons.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "membershipTypeCode",
            "in": "query",
            "description": "Membership type code for which to return allowable reward reasons.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rewardCategory",
            "in": "query",
            "description": "Category of reward reasons to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Adjustment",
                  "Redemption",
                  "Reversal"
                ]
              }
            }
          },
          {
            "name": "redemptionType",
            "in": "query",
            "description": "Redemption types for which to return reward reasons.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ManualReward",
                  "PercentageOfPoints",
                  "FlatAmountFixed",
                  "PercentageOfTransaction",
                  "FlatAmountVariable"
                ]
              }
            }
          },
          {
            "name": "isAvailable",
            "in": "query",
            "description": "Indicates whether reason types should be filtered based on whether they\nare available for redemption based on the caller.  When set to true, types\nwill be returned if they are active, not system-defined, and not\nrestricted from being used in individual redemptions.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardReasonList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/transaction": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Search for transactions",
        "description": "Search for transactions",
        "operationId": "Searchfortransactions",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Number of the customer for whom to return transactions",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionId",
            "in": "query",
            "description": "Numbers of the transactions to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "lineItemComment",
            "in": "query",
            "description": "Text for which to search in transaction line item comments.\n\nIf provided, only line items which match this criteria will be returned.\nAn exact match search is performed unless URL-encoded wildcards are included.\nThe supported wildcards are * and ? which are %2A and %3F respectively\nwhen URL encoded.\n\nTo search for multiple comments, include separate query parameters, each\nwith a single value.  Do not attempt to include comma-separated values\nunder a single query parameter for this field, since comments may include\ncommas.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Beginning date for which to return transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Ending date for which to return transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesChannel",
            "in": "query",
            "description": "Codes of the sales channels from which to return transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to return.\nIf no limit is provided, the default service configuration returns 25 records.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Standard pagination pattern.  Number of records to skip prior to the start of the current response.\nIf no offset is provided, the service defaults to 0 and the response begins with the first record.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sort order for pagination pattern.  Append ' desc' to a field name to sort descending.\nAvailable fields are postedDate, transactionDate, transactionId, storeNumber,\nsalesChannelCode.\nWhen not specified, the default service configuration is 'transactionDate desc, transactionId desc'.\nWhen a secondary sort is not specified, the sort field 'transactionId desc' is appended\nif the transactionId field is not already used in the orderBy expression.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResultsPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/tenderType": {
      "get": {
        "tags": [
          "Transaction - Reference Data"
        ],
        "summary": "getRefTenderType",
        "description": "Retrieve all tender types",
        "operationId": "getRefTenderType",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenderTypeList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/transactionCategory": {
      "get": {
        "tags": [
          "Transaction - Reference Data"
        ],
        "summary": "getRefTransactionCategory",
        "description": "Retrieve all transaction categories",
        "operationId": "getRefTransactionCategory",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCategoryList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ref/transactionSource": {
      "get": {
        "tags": [
          "Transaction - Reference Data"
        ],
        "summary": "getRefTransactionSource",
        "description": "Retrieve all transaction sources",
        "operationId": "getRefTransactionSource",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionSourceList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/admin/cacheStatus": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "administerCacheStatus",
        "description": "Retrieve the status of the cache, and optionally clear the cache.",
        "operationId": "administerCacheStatus",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "When the value 'clear' is provided, the current runtime cache will be cleared.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in the response.  When not specified, all fields are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "in": "query",
            "description": "The languages for the translations that should be returned in the translations field of the response. This may be a comma-separated list of codes or \"all\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language for the translation that should be returned in the response.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-Correlation-Id",
            "in": "header",
            "description": "A UUID generated by the client for each request, to help correlate logged\nactivity on the backend for troubleshooting and auditing purposes.\n",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Aptos-StoreNumber",
            "in": "header",
            "description": "The number of the store (retail location) from which the call originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Aptos-SalesAssociateNumber",
            "in": "header",
            "description": "The number of the sales associate for whom the call was originated",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "The language for the translation that should be returned in the response if no 'lang' parameter was provided.",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatus"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/ping": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "ping",
        "description": "Retrieve the current status and version of the service.",
        "operationId": "ping",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code of the response",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "description": "Overall error message for the response"
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseMessage"
            },
            "description": "Specific error messages describing individual errors"
          }
        }
      },
      "ErrorResponseMessage": {
        "title": "ErrorResponseMessage",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Application error code identifying the specific error encountered.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Message describing and individual error"
          },
          "path": {
            "type": "string",
            "description": "Path identifying the field which caused the error"
          },
          "type": {
            "type": "string",
            "description": "The type of error which occurred"
          },
          "context": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Values or parameters to provide context for where the error occurred"
          }
        }
      },
      "SortEntry": {
        "title": "SortEntry",
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The name of the field included in the sort order expression."
          },
          "direction": {
            "description": "The sort order for the specified field, expressed as 'asc' for\nascending or 'desc' for descending.\n",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer.\nGenerally, this number is system-generated by CRM for new customers.\n"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "Active",
              "Duplicate",
              "Inactive"
            ],
            "description": "The status assigned to a customer.  Default is 'Active' if not provided.\n\nThe status of 'Duplicate' is system-reserved and may not be set by the caller.\nThe system automatically assigns that status to customers in a duplicate\nconsolidation process, and returns them to Active once they are resolved.\n\nOnly statuses of Active and Inactive may be set by the caller and only\nfor customers who are already Active or Inactive.\n"
          },
          "preferredLanguageCode": {
            "type": "string",
            "description": "The code indicating the preferred communication language of the customer.\nIf not provided, a default will be assigned.\n"
          },
          "isHeadOfHousehold": {
            "type": "boolean",
            "description": "Indicates whether the customer has been designated the head of their household.\n\nWhen creating a new customer, if there are no other household members\nfound in the database, the customer will be marked as the head of a newly created\nhousehold regardless of the value being passed in this field.\n\nWhen updating an existing customer, a value of false is ignored and will\nnot remove the head of household designation from a customer.\n"
          },
          "isComplete": {
            "type": "boolean",
            "description": "Indicates whether the customer record matches at least one of the\ncomplete customer criteria configurations. The complete customer\nevaluation process must be enabled for this field to be populated.\nSee /ref/customerValidationSettings/ for current configuration.\n"
          },
          "isCompleteDate": {
            "type": "string",
            "description": "The date when the customer data became complete, as defined by the\ncomplete customer criteria configurations. The complete customer\nevaluation process must be enabled for this field to be populated.\nSee /ref/customerValidationSettings/ for current configuration.\n",
            "format": "date-time"
          },
          "isCompleteModifyDate": {
            "type": "string",
            "description": "The date when the customer data complete status was last modified.\nThe complete customer evaluation process must be enabled for this\nfield to be populated.\nSee /ref/customerValidationSettings/ for current configuration.\n",
            "format": "date-time"
          },
          "systemModifyDate": {
            "type": "string",
            "description": "The last date that any data on the customer record was modified.\nIncludes changes to customer, contact information, attributes, transactions, etc.\n",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "description": "The title associated with the customer."
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the customer.\nThe customer validation settings, which include the complete customer criteria\nconfiguration, control whether this field is required.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the customer.\nThe customer validation settings, which include the complete customer criteria\nconfiguration, control whether this field is required.\n"
          },
          "companyName": {
            "type": "string",
            "description": "The name of the company at which the customer is employed."
          },
          "jobTitle": {
            "type": "string",
            "description": "The customer's job title."
          },
          "birthDate": {
            "type": "string",
            "description": "The customer's birthdate. A year of 1904 indicates that no birth\nyear has been provided.\nNo time zone information will be provided, and any time zone information\nin the request will be discarded, as will any time-of-day.\n",
            "format": "date"
          },
          "genderCode": {
            "type": "string",
            "description": "The customer's gender.\nSee /ref/customerGender/ for available options.\n"
          },
          "maritalStatusCode": {
            "type": "string",
            "description": "The customer's marital status.\nSee /ref/customerMaritalStatus/ for available options.\n"
          },
          "hasLoyaltyMemberships": {
            "type": "string",
            "description": "Indicates whether the customer has any loyalty memberships.\n",
            "enum": [
              "Unknown",
              "Yes",
              "No"
            ]
          },
          "divisionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerDivisionalProperties"
            },
            "description": "The customer's divisional properties, such as the customer's\nassigned store in each division.        \n"
          },
          "segmentationCodeA": {
            "type": "string",
            "description": "The customer's segment code for Segmentation Code A."
          },
          "segmentationCodeB": {
            "type": "string",
            "description": "The customer's segment code for Segmentation Code B."
          },
          "segmentationCodeC": {
            "type": "string",
            "description": "The customer's segment code for Segmentation Code C."
          },
          "segmentationCodeD": {
            "type": "string",
            "description": "The customer's segment code for Segmentation Code D."
          },
          "segmentationDateA": {
            "type": "string",
            "format": "date",
            "description": "The customer's segment code for Segmentation Date A."
          },
          "segmentationDateB": {
            "type": "string",
            "format": "date",
            "description": "The customer's segment code for Segmentation Date B."
          },
          "segmentationValueA": {
            "type": "number",
            "description": "The customer's segment value for Segmentation Value A."
          },
          "segmentationValueB": {
            "type": "number",
            "description": "The customer's segment value for Segmentation Value B."
          },
          "segmentationValueC": {
            "type": "number",
            "description": "The customer's segment value for Segmentation Value C."
          },
          "segmentationValueD": {
            "type": "number",
            "description": "The customer's segment value for Segmentation Value D."
          },
          "segmentationFlagA": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag A."
          },
          "segmentationFlagB": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag B."
          },
          "segmentationFlagC": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag C."
          },
          "segmentationFlagD": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag D."
          },
          "segmentationFlagE": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag E."
          },
          "segmentationFlagF": {
            "type": "boolean",
            "description": "The customer's segment value for Segmentation Flag F."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "The customer's addresses."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            },
            "description": "The customer's email addresses."
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            },
            "description": "The customer's phone numbers."
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembership"
            },
            "description": "The customer's loyalty plan memberships."
          },
          "alternateKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternateKey"
            },
            "description": "The customer's alternate keys."
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "description": "The customer's attributes"
          },
          "activityOccurrence": {
            "$ref": "#/components/schemas/ActivityOccurrenceResultsPage",
            "readOnly": true,
            "description": "The customer's aggregated transaction history categorized as occurrences. \n"
          },
          "activitySummary": {
            "$ref": "#/components/schemas/ActivitySummaryResultsPage",
            "readOnly": true,
            "description": "The customer's aggregated transaction history which may be requested at\nvarious grains, such as by sales channel, by year, by store, etc. \n"
          }
        }
      },
      "CustomerDivisionalProperties": {
        "title": "CustomerDivisionalProperties",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "divisionCode": {
            "type": "string",
            "description": "The code of the division for which the properties apply"
          },
          "assignedStoreNumber": {
            "type": "integer",
            "description": "The customer's assigned store for the division.",
            "format": "int32"
          },
          "assignedSalesAssociateNumber": {
            "type": "integer",
            "description": "The customer's assigned sales associate for the division.",
            "format": "int32"
          },
          "createSource": {
            "type": "string",
            "description": "The customer's free-form create source for the division."
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The number of the store in which the customer was created for the division.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the customer in the division."
          },
          "createDate": {
            "type": "string",
            "description": "The date the customer was created in the division.",
            "format": "date-time"
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The number of the store in which the customer was last modified in the division.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the customer in the division."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date of the last modification to the customer in the division.",
            "format": "date-time"
          }
        }
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "addressId": {
            "type": "integer",
            "description": "The ID assigned to the address.\nMust not be provided when adding a new address.\n",
            "format": "int32"
          },
          "addressTypeCode": {
            "type": "string",
            "description": "The type code assigned to the address.\nThe configurable default value will be used when creating a new\naddress if no address type code is provided.\n"
          },
          "validityStatus": {
            "type": "string",
            "enum": [
              "Valid",
              "Invalid",
              "Unknown"
            ],
            "description": "The validity indicator for the address.\nIf not provided when creating a new email, it will be set to Unknown.\nIf not provided during an update, the status will be reset to Unknown\nif the newly calculated address match key is different.\n"
          },
          "addressLine1": {
            "type": "string",
            "description": "The value of the first address line. This generally holds the street address.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "addressLine2": {
            "type": "string",
            "description": "The value of the second address line. This generally holds the apartment.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "addressLine3": {
            "type": "string",
            "description": "The value stored in the third address line.  This generally holds the city.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "addressLine4": {
            "type": "string",
            "description": "The value stored in the fourth address line.  This generally holds the State or Province.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "addressLine5": {
            "type": "string",
            "description": "The value stored in the fifth address line.  This is generally unused for most countries.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "addressLine6": {
            "type": "string",
            "description": "The value stored in the sixth address line.  This is generally unused for most countries.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "postalCode": {
            "type": "string",
            "description": "The zip code or postal code for the address.\nSee /ref/countryConfiguration/ for user configurable display labels for this field.\n"
          },
          "countryCode": {
            "type": "string",
            "description": "The country code associated with the address.\nSee /ref/countryConfiguration/ for user configurable display labels for addresses in each country.\n"
          },
          "addressStandardizationMatchCode": {
            "type": "string",
            "description": "If implemented, the match code provided by the address standardization provider."
          },
          "carrierRoute": {
            "type": "string",
            "description": "The carrier route associated with the address."
          },
          "latitude": {
            "type": "number",
            "description": "The latitude associated with the address.\nTo remove a saved value for latitude, pass a value of -999.\n"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude associated with an address.\nTo remove a saved value for longitude, pass a value of -999.\n"
          },
          "ncoaDate": {
            "type": "string",
            "description": "Date when the address was last verified with National Change of Address (NCOA) service.\nTo removed a saved date, pass a [BLANK] value.\n",
            "format": "date"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the address was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the address."
          },
          "createDate": {
            "type": "string",
            "description": "The date when the address was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that created the address.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the creation of the address."
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the address was last modified.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the address."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date when the address was last modified.",
            "format": "date-time"
          },
          "modifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the address.",
            "format": "int32"
          },
          "modifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification of the address.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "postedDate": {
            "type": "string",
            "description": "The date when the last change to the address was recorded by the system.",
            "format": "date-time"
          },
          "primarySettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressPrimarySetting"
            },
            "description": ""
          },
          "optIns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressOptIn"
            },
            "description": ""
          }
        }
      },
      "AddressList": {
        "title": "AddressList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": ""
          }
        }
      },
      "AddressPrimarySetting": {
        "title": "AddressPrimarySetting",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The code of the division for which the primary setting applies."
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Indicates whether the address is primary for the division.\nWhen creating or updating an address, if the value provided is false,\nand no other incoming entries in the same call are true, the system will\nauto-select a new primary entry.  If no other entry exists, the one being\nupdated will remain primary despite the false value.\nIf no primary settings are provided, the incoming entry will be made\nprimary for the calling division.\n"
          },
          "primaryDate": {
            "type": "string",
            "description": "The date when the primary setting changed.",
            "format": "date-time"
          }
        }
      },
      "AddressOptIn": {
        "title": "AddressOptIn",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "addressId": {
            "type": "integer",
            "description": "The ID assigned to the address for which the opt-in applies.\nMust not be provided when creating opt-ins with a new address.\n",
            "format": "int32"
          },
          "divisionCode": {
            "type": "string",
            "description": "The code of the division to which the opt-in applies."
          },
          "directMailOptIn": {
            "type": "string",
            "description": "The opt-in preference associated with the address for the division.",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "directMailOptInDate": {
            "type": "string",
            "description": "The date when the customer last modified the opt-in.  Used\nto determine which opt-in to retain during a consolidation.\n",
            "format": "date-time"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the opt-in was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the opt-in."
          },
          "createDate": {
            "type": "string",
            "description": "The system-assigned date when the opt-in was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that added the opt-in.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the opt-in creation."
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the opt-in was last modified.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the opt-in."
          },
          "modifyDate": {
            "type": "string",
            "description": "The system-assigned date when the opt-in was last modified.",
            "format": "date-time"
          },
          "modifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the opt-in.",
            "format": "int32"
          },
          "modifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification to the opt-in.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "postedDate": {
            "type": "string",
            "description": "The date when the last change to the opt-in was recorded by the system.",
            "format": "date-time"
          }
        }
      },
      "AddressOptInList": {
        "title": "AddressOptInList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressOptIn"
            },
            "description": ""
          }
        }
      },
      "AlternateKey": {
        "title": "AlternateKey",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "alternateKeyId": {
            "type": "integer",
            "description": "The ID of the customer alternate key.",
            "format": "int64"
          },
          "alternateKeyTypeCode": {
            "type": "string",
            "description": "The type code of the alternate key.\n\nOnly alternate keys where the type has an encryption level of 0 may be\ninserted or updated.\n\nOnly alternate keys where the type is marked as visible at POS are available for retrieval,\ninsert or update.\n"
          },
          "value": {
            "type": "string",
            "description": "The value of the alternate key.\nDo not include any raw sensitive data in this field since it will be stored in\nraw form.  Sensitive data needs to be secured (encrypted, tokenized, etc) before being\npassed into the CRM API.\n"
          },
          "createDate": {
            "type": "string",
            "description": "The date when the alternate key was added to the customer.",
            "format": "date-time"
          }
        }
      },
      "AlternateKeyList": {
        "title": "AlternateKeyList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternateKey"
            },
            "description": ""
          }
        }
      },
      "Attribute": {
        "title": "Attribute",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "attributeId": {
            "type": "integer",
            "description": "The ID assigned to the customer attribute.",
            "format": "int64"
          },
          "divisionCode": {
            "type": "string",
            "description": "The division code assigned to the customer attribute.\nIt will be set to [MULTIPLE] if the attribute spans multiple divisions.\n"
          },
          "attributeGroupCode": {
            "type": "string",
            "description": "The grouping code of the customer attribute.\nOnly attributes where the grouping code is marked as distributed are available\nfor retrieval, insert, or update.\n"
          },
          "attributeCode": {
            "type": "string",
            "description": "The code of the customer attribute."
          },
          "comment": {
            "type": "string",
            "description": "The optional comment associated with the customer attribute.\nThis field may be populated only if it is enabled for a given\nattribute group.\n"
          },
          "value": {
            "type": "number",
            "description": "The optional numeric value associated with the customer attribute.\nThis field may be populated only if it is enabled for a given\nattribute group.\n"
          },
          "date": {
            "type": "string",
            "description": "The optional date associated with the customer attribute.\nThis field may be populated only if it is enabled for a given\nattribute group.\n",
            "format": "date-time"
          },
          "createUser": {
            "type": "string",
            "description": "The user who added the attribute to the customer."
          },
          "createDate": {
            "type": "string",
            "description": "The date the attribute was added to the customer.",
            "format": "date-time"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the attribute."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date the attribute was last modified.",
            "format": "date-time"
          }
        }
      },
      "AttributeList": {
        "title": "AttributeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "description": ""
          }
        }
      },
      "Email": {
        "title": "Email",
        "required": [
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "emailId": {
            "type": "integer",
            "description": "The ID assigned to the email address.\nMust not be provided when adding a new email address.\n",
            "format": "int32"
          },
          "emailTypeCode": {
            "type": "string",
            "description": "The type code assigned to the email address.\nThe configurable default value will be used when creating a new\nemail address if no email address type code is provided.\n"
          },
          "validityStatus": {
            "type": "string",
            "enum": [
              "Valid",
              "Invalid",
              "Unknown"
            ],
            "description": "The validity indicator for the email address.\nIf not provided when creating a new email, it will be set to Unknown.\nIf not provided during an update, the status will be reset to Unknown\nif the email address is different.\n"
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address."
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the email address was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the email address."
          },
          "createDate": {
            "type": "string",
            "description": "The date when the email address was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that created the email address.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the creation of the email address."
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the email address was last modified.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the email address."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date when the email address was last modified.",
            "format": "date-time"
          },
          "modifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the email address.",
            "format": "int32"
          },
          "modifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification of the email address.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "postedDate": {
            "type": "string",
            "description": "The date when the last change to the email address was recorded by the system.",
            "format": "date-time"
          },
          "primarySettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailPrimarySetting"
            },
            "description": ""
          },
          "optIns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailOptIn"
            },
            "description": ""
          }
        }
      },
      "EmailList": {
        "title": "EmailList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            },
            "description": ""
          }
        }
      },
      "EmailPrimarySetting": {
        "title": "EmailPrimarySetting",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The code of the division for which the primary setting applies."
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Indicates whether the email address is primary for the division.\nWhen creating or updating an email, if the value provided is false,\nand no other incoming entries in the same call are true, the system will\nauto-select a new primary entry.  If no other entry exists, the one being\nupdated will remain primary despite the false value.\nIf no primary settings are provided, the incoming entry will be made\nprimary for the calling division.\n"
          },
          "primaryDate": {
            "type": "string",
            "description": "The date when the primary setting changed.",
            "format": "date-time"
          }
        }
      },
      "EmailOptIn": {
        "title": "EmailOptIn",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "emailId": {
            "type": "integer",
            "description": "The ID assigned to the email address for which the opt-in applies.\nMust not be provided when creating opt-ins with a new email address.\n",
            "format": "int32"
          },
          "divisionCode": {
            "type": "string",
            "description": "The code of the division to which the opt-in applies."
          },
          "emailOptIn": {
            "type": "string",
            "description": "The opt-in preference associated with the email address for the division.",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "emailOptInDate": {
            "type": "string",
            "description": "The date when the customer last modified the opt-in.  Used\nto determine which opt-in to retain during a consolidation.\n",
            "format": "date-time"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the opt-in was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the opt-in."
          },
          "createDate": {
            "type": "string",
            "description": "The system-assigned date when the opt-in was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that added the opt-in.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the opt-in creation."
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the opt-in was last modified.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the opt-in."
          },
          "modifyDate": {
            "type": "string",
            "description": "The system-assigned date when the opt-in was last modified.",
            "format": "date-time"
          },
          "modifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the opt-in.",
            "format": "int32"
          },
          "modifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification to the opt-in.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "postedDate": {
            "type": "string",
            "description": "The date when the last change to the opt-in was recorded by the system.",
            "format": "date-time"
          }
        }
      },
      "EmailOptInList": {
        "title": "EmailOptInList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailOptIn"
            },
            "description": ""
          }
        }
      },
      "Phone": {
        "title": "Phone",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "phoneId": {
            "type": "integer",
            "description": "The ID assigned to the phone number.\nMust not be provided when adding a new phone number.\n",
            "format": "int32"
          },
          "phoneTypeCode": {
            "type": "string",
            "description": "The type code assigned to the phone number.\nThe configurable default value will be used when creating a new\nphone number if no phone number type code is provided.\n"
          },
          "validityStatus": {
            "type": "string",
            "enum": [
              "Valid",
              "Invalid",
              "Unknown"
            ],
            "description": "The validity indicator for the phone number.\nIf not provided when creating a new phone number, it will be set to Unknown.\nIf not provided during an update, the status will be reset to Unknown\nif the phone number is different.\n"
          },
          "phoneNumber": {
            "maxLength": 16,
            "type": "string",
            "description": "The numeric phone number.\nPhone numbers with punctuation, special characters, and/or letters will be\nrejected.\n"
          },
          "phoneExtensionNumber": {
            "maxLength": 5,
            "type": "string",
            "description": "The extension number associated with the phone number."
          },
          "phoneCountryCode": {
            "type": "string",
            "description": "The country code associated with the phone number.  This refers to the\ncountry itself (e.g. USA) and not the country dialing code which can\nbe found in the country reference data.\n"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the phone number was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the phone number."
          },
          "createDate": {
            "type": "string",
            "description": "The date when the phone number was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that created the phone number.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the creation of the phone number."
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the phone number was last modified.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the phone number."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date when the phone number was last modified.",
            "format": "date-time"
          },
          "modifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the phone number.",
            "format": "int32"
          },
          "modifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification of the phone number.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "postedDate": {
            "type": "string",
            "description": "The date when the last change to the phone number was recorded by the system.",
            "format": "date-time"
          },
          "primarySettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhonePrimarySetting"
            },
            "description": ""
          },
          "optIns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneOptIn"
            },
            "description": ""
          }
        }
      },
      "PhoneList": {
        "title": "PhoneList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            },
            "description": ""
          }
        }
      },
      "PhonePrimarySetting": {
        "title": "PhonePrimarySetting",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The code of the division for which the primary setting applies."
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Indicates whether the phone number is primary for the division.\nWhen creating or updating a phone number, if the value provided is false,\nand no other incoming entries in the same call are true, the system will\nauto-select a new primary entry.  If no other entry exists, the one being\nupdated will remain primary despite the false value.\nIf no primary settings are provided, the incoming entry will be made\nprimary for the calling division.\n"
          },
          "primaryDate": {
            "type": "string",
            "description": "The date when the primary setting changed.",
            "format": "date-time"
          }
        }
      },
      "PhoneOptIn": {
        "title": "PhoneOptIn",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "phoneId": {
            "type": "integer",
            "description": "The ID assigned to the phone number for which the opt-in applies.\nMust not be provided when creating opt-ins with a new phone number.\n",
            "format": "int32"
          },
          "divisionCode": {
            "type": "string",
            "description": "The code of the division to which the opt-in applies."
          },
          "voiceOptIn": {
            "type": "string",
            "description": "The opt-in preference associated with the phone number for voice phone calls for the division.",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "voiceOptInDate": {
            "type": "string",
            "description": "The date when the customer last modified the voice opt-in.  Used\nto determine which opt-in to retain during a consolidation.\n",
            "format": "date-time"
          },
          "textOptIn": {
            "type": "string",
            "description": "The opt-in preference associated with the phone number for text messaging for the division.",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "textOptInDate": {
            "type": "string",
            "description": "The date when the customer last modified the text opt-in.  Used\nto determine which opt-in to retain during a consolidation.\n",
            "format": "date-time"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store from which the opt-in was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the opt-in."
          },
          "createDate": {
            "type": "string",
            "description": "The system-assigned date when the opt-in was created.",
            "format": "date-time"
          },
          "createSourceId": {
            "type": "integer",
            "description": "The ID of the process or application that added the opt-in.",
            "format": "int32"
          },
          "createComment": {
            "type": "string",
            "description": "Optional comment associated with the opt-in creation."
          },
          "modifyDate": {
            "type": "string",
            "description": "The system-assigned date of the most recent change to the opt-in record.\nThis date will match either the voiceModifyDate or the textModifyDate.\n",
            "format": "date-time"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who made the most recent change to the opt-in record.\nThis user will match either the voiceModifyUser or the textModifyUser.\n"
          },
          "voiceModifyStoreNumber": {
            "type": "integer",
            "description": "The store from which the voice opt-in was last modified.",
            "format": "int32"
          },
          "voiceModifyUser": {
            "type": "string",
            "description": "The user who last modified the voice opt-in."
          },
          "voiceModifyDate": {
            "type": "string",
            "description": "The system-assigned date when the voice opt-in was last modified.",
            "format": "date-time"
          },
          "voiceModifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the voice opt-in.",
            "format": "int32"
          },
          "voiceModifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification to the voice opt-in.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "voicePostedDate": {
            "type": "string",
            "description": "The date when the last change to the voice opt-in was recorded by the system.",
            "format": "date-time"
          },
          "textModifyStoreNumber": {
            "type": "integer",
            "description": "The store in which the text opt-in was last modified.",
            "format": "int32"
          },
          "textModifyUser": {
            "type": "string",
            "description": "The user who last modified the text opt-in."
          },
          "textModifyDate": {
            "type": "string",
            "description": "The system-assigned date when the text opt-in was last modified.",
            "format": "date-time"
          },
          "textModifySourceId": {
            "type": "integer",
            "description": "The ID of the process or application that last modified the text opt-in.",
            "format": "int32"
          },
          "textModifyComment": {
            "type": "string",
            "description": "Optional comment associated with the last modification to the text opt-in.\nDuring an update, this field is automatically blanked out if a new value\nis not provided, based on the assumption that the comment associated\nwith the prior modification does not apply to the current one.\n"
          },
          "textPostedDate": {
            "type": "string",
            "description": "The date when the last change to the text opt-in was recorded by the system.",
            "format": "date-time"
          }
        }
      },
      "PhoneOptInList": {
        "title": "PhoneOptInList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneOptIn"
            },
            "description": ""
          }
        }
      },
      "CustomerSearchParameters": {
        "title": "CustomerSearchParameters",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The customer number to search for.  The search will find customers who\ncurrently have this number or had it at some point in the past.\n"
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number to search for.\nA parameter controls whether the search will include only phone numbers\nmarked as primary.\nA suffix-only search may be performed if this is enabled. The number of\ncharacters to enter is configured in the enhanced search parameters.\n"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code value to search for. This should be combined with other\nvariables for more precise matching.\nA parameter controls whether the search will include only addresses\nthat are marked as primary.\nFor wildcards, use * at the end of a search string.\n"
          },
          "addressLine1": {
            "type": "string",
            "description": "The street address to search for.\nA parameter controls whether the search will include only addresses\nthat are marked as primary.\nFor wildcards, use * at the end of a search string.\n"
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address to search for.\nA parameter controls whether the search will include only email addresses\nthat are marked as primary.\nFor wildcards, use * at the end of a search string.\n"
          },
          "firstName": {
            "type": "string",
            "description": "The first name to search for.\nThis must be combined with Last Name unless the enhanced search on\nfirst name and postal code is enabled.\nFor wildcards, use * at the end of a search string.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The last name to search for. This should be combined with other variables\nfor more precise matching.\nFor wildcards, use * at the end of a search string.\n"
          },
          "alternateKey1": {
            "type": "string",
            "description": "The alternate key value to search for."
          },
          "alternateKey2": {
            "type": "string",
            "description": "Secondary alternate key to search for."
          }
        }
      },
      "CustomerSummary": {
        "title": "CustomerSummary",
        "type": "object",
        "description": "The data returned in customer search results and/or household inquiries.\nFor email, address, and phone, only the basic fields will be included.\nAdditional fields like the audit and opt-in fields will not be included.\nFor loyalty memberships, by default only the loyaltyPlanId, joinDate,\nmembershipTypeCode, membershipStatus fields are included.\n",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "title": {
            "type": "string",
            "description": "The title assigned to the customer."
          },
          "firstName": {
            "type": "string",
            "description": "The customer's first name."
          },
          "lastName": {
            "type": "string",
            "description": "The customer's last name."
          },
          "companyName": {
            "type": "string",
            "description": "The name of the company at which the customer is employed."
          },
          "isHeadOfHousehold": {
            "type": "boolean",
            "description": "Indicates whether the customer is flagged as the head of their household."
          },
          "mainEmail": {
            "$ref": "#/components/schemas/Email"
          },
          "mainAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "mainPhone": {
            "$ref": "#/components/schemas/Phone"
          },
          "activeMemberships": {
            "$ref": "#/components/schemas/LoyaltyMembership"
          }
        }
      },
      "CustomerSearchResultsPage": {
        "title": "CustomerSearchResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerSummary"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressType": {
        "title": "AddressType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code for the address type."
          },
          "description": {
            "type": "string",
            "description": "The description of the address type."
          },
          "sortOrder": {
            "type": "integer",
            "description": "The sort order of the address type.",
            "format": "int32"
          },
          "enforceUniquePerCustomer": {
            "type": "boolean",
            "description": "Indicates whether a customer may have multiple addresses under this\naddress type.\n"
          },
          "mayUseForHouseholding": {
            "type": "boolean",
            "description": "Indicates whether this address type is appropriate for use in the\nhousehold match key.  Generally only enabled for a home address.\n"
          },
          "excludeFromDuplicateMatching": {
            "type": "boolean",
            "description": "Indicates whether this address type should be excluded from duplicate\nmatching, generally because it doesn't uniquely identify the customer.\nFor example, a work address would likely be excluded.\n"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether the address type is the one defined as\ndefault for new addresses.\n"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "AddressTypeList": {
        "title": "AddressTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressType"
            },
            "description": ""
          }
        }
      },
      "AlternateKeyMask": {
        "title": "AlternateKeyMask",
        "type": "object",
        "properties": {
          "keyLength": {
            "type": "integer",
            "description": "An acceptable length for the alternate key value.\nIt is combined with the prefix to validate whether an alternate key value\nmay be saved under the type.\n",
            "format": "int32"
          },
          "keyPrefix": {
            "type": "string",
            "description": "An acceptable prefix for the alternate key value.\nIt is combined with the length to validate whether an alternate key value\nmay be saved under the type.\n"
          },
          "modifyDate": {
            "type": "string",
            "description": "The date the alternate key mask was last modified.",
            "format": "date-time"
          }
        }
      },
      "AlternateKeyType": {
        "title": "AlternateKeyType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the alternate key type.\nNOTE: Only alternate key types that are visible at POS and are available based on the\ncaller's divisional and cross-divisional permissions are returned.  UI restrictions ensure\nthat SDM encrypted alt keys may not be set to 'Visible at POS'.\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the alternate key type."
          },
          "isUniqueIdentifier": {
            "type": "boolean",
            "description": "When true, each alternate key value of this type will uniquely identify\nthe customer to which it is assigned, and the system will not permit\nthe same key value to be saved on multiple customers.\n"
          },
          "isPosOfflineKey": {
            "type": "boolean",
            "description": "Identifies whether the key type is available for use by POS to identify\ncustomers created or saved while off-line.\n"
          },
          "divisionCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The divisions in which this alternate key is visible."
          },
          "masks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternateKeyMask"
            },
            "description": "The acceptable combinations of prefix and length for key values.\nThis list may be empty if the key is a free-form key.\n"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the alternate key type."
          },
          "createDate": {
            "type": "string",
            "description": "The date the alternate key type was created.",
            "format": "date-time"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who last modified the alternate key type."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date the alternate key type was last modified.",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "The alternate key type definition."
      },
      "AlternateKeyTypeList": {
        "title": "AlternateKeyTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternateKeyType"
            },
            "description": ""
          }
        }
      },
      "AttributeDefinition": {
        "title": "AttributeDefinition",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the attribute."
          },
          "description": {
            "type": "string",
            "description": "The description of the attribute."
          }
        }
      },
      "AttributeGroupDefinition": {
        "title": "AttributeGroupDefinition",
        "type": "object",
        "properties": {
          "groupCode": {
            "type": "string",
            "description": "The code of the attribute group.\nOnly attributes where the grouping code is marked as distributed are available\nfor retrieval.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the attribute group."
          },
          "isUnique": {
            "type": "boolean",
            "description": "Indicates whether a customer may have multiple attribute codes within\nthe attribute group.  If unique, only a single code is permitted.\n"
          },
          "sharedValue": {
            "type": "boolean",
            "description": "Indicates whether the attribute is shared across divisions or whether\na separate entry will be created for each division. An attribute\nmarked as non-shared is generally one where the customer would have\na different code/comment/date/value in each division.\n"
          },
          "includeInSummaryDisplay": {
            "type": "boolean",
            "description": "Indicates whether the attribute should be shown in a summary screen view.\nUsed by Aptos Store 6 to control the filtered summary screen.\n"
          },
          "consolidationRule": {
            "type": "string",
            "description": "Indicates the rule to follow when consolidating attributes being merged in order to\nenforce the unique flag setting or as a result of matching group and code values.\nThe default behavior is to keep the value from the source customer.\n",
            "enum": [
              "KeepSource",
              "MostRecentAttributeDate",
              "OldestAttributeDate",
              "HighestValue",
              "LowestValue"
            ]
          },
          "codeLabel": {
            "type": "string",
            "description": "The external label for the attribute."
          },
          "commentLabel": {
            "type": "string",
            "description": "The label for the attribute comment field.\nWhen the label is not present, the comment field is disabled for the attribute group.\n"
          },
          "dateLabel": {
            "type": "string",
            "description": "The label for the attribute date field.\nWhen the label is not present, the date field is disabled for the attribute group.\n"
          },
          "valueLabel": {
            "type": "string",
            "description": "The label for the attribute value field.\nWhen the label is not present, the value field is disabled for the attribute group.\n"
          },
          "commentDefault": {
            "type": "string",
            "description": "The default comment to apply to a new attribute when an explicit comment\nis not provided.  May be NULL.\n"
          },
          "dateDefault": {
            "type": "string",
            "description": "The default date to apply to a new attribute when an explicit date\nis not provided.  May be NULL.\n",
            "format": "date-time"
          },
          "valueDefault": {
            "type": "number",
            "description": "The default value to apply to a new attribute when an explicit value\nis not provided.  May be NULL.\n"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinition"
            },
            "description": "The attribute codes/descriptions under the attribute group."
          },
          "divisionCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The divisions in which the attribute is valid."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttributeGroupTranslationDictionary"
            },
            "description": "A dictionary of translations."
          }
        }
      },
      "AttributeGroupDefinitionList": {
        "title": "AttributeGroupDefinitionList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroupDefinition"
            },
            "description": ""
          }
        }
      },
      "CompleteCustomerCriteria": {
        "title": "CompleteCustomerCriteria",
        "type": "object",
        "properties": {
          "isFirstNameRequired": {
            "type": "boolean",
            "description": "Indicates if the first name is required in the set."
          },
          "isLastNameRequired": {
            "type": "boolean",
            "description": "Indicates if the last name is required in the set.\nEven if it's not required in any of the sets, it may still be required\nvia the explicit 'allow null last name' setting.\n"
          },
          "isAddressLine1Required": {
            "type": "boolean",
            "description": "Indicates if the first address line is required in the set."
          },
          "isAddressLine2Required": {
            "type": "boolean",
            "description": "Indicates if the second address line is required in the set."
          },
          "isAddressLine3Required": {
            "type": "boolean",
            "description": "Indicates if the third address line is required in the set."
          },
          "isAddressLine4Required": {
            "type": "boolean",
            "description": "Indicates if the fourth address line is required in the set."
          },
          "isPostCodeRequired": {
            "type": "boolean",
            "description": "Indicates if the post code is required in the set."
          },
          "isPhoneRequired": {
            "type": "boolean",
            "description": "Indicates if a phone number is required in the set."
          },
          "isEmailRequired": {
            "type": "boolean",
            "description": "Indicates if an email address is required in the set."
          }
        }
      },
      "CountryConfiguration": {
        "title": "CountryConfiguration",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The country code associated with the country.  This is generally the 3-letter\nISO country code but the 2-letter ISO country code may also be used.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the country."
          },
          "currencyCode": {
            "type": "string",
            "description": "The 3 letter ISO currency code of the default currency used in this country."
          },
          "languageCode": {
            "type": "string",
            "description": "The 3-letter code for the default language spoken in the country."
          },
          "addressLine1Label": {
            "type": "string",
            "description": "The label on the first address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine2Label": {
            "type": "string",
            "description": "The label on the second address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine3Label": {
            "type": "string",
            "description": "The label on the third address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine4Label": {
            "type": "string",
            "description": "The label on the fourth address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine5Label": {
            "type": "string",
            "description": "The label on the fifth address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine6Label": {
            "type": "string",
            "description": "The label on the sixth address line for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "postalCodeLabel": {
            "type": "string",
            "description": "The label for the postal code field for the country.\nIf NULL, the address line is disabled for the country.\n"
          },
          "addressLine1MinLength": {
            "type": "integer",
            "description": "The minimum length of the first address line for the country. New addresses will be\nvalidated against this setting, if the address line 1 field is not NULL.\n",
            "format": "int32"
          },
          "addressLine2MinLength": {
            "type": "integer",
            "description": "The minimum length of the second address line for the country. New addresses will be\nvalidated against this setting, if the address line 2 field is not NULL.\n",
            "format": "int32"
          },
          "addressLine3MinLength": {
            "type": "integer",
            "description": "The minimum length of the third address line for the country. New addresses will be\nvalidated against this setting, if the address line 3 field is not NULL.\n",
            "format": "int32"
          },
          "addressLine4MinLength": {
            "type": "integer",
            "description": "The minimum length of the fourth address line for the country. New addresses will be\nvalidated against this setting, if the address line 4 field is not NULL.\n",
            "format": "int32"
          },
          "addressLine5MinLength": {
            "type": "integer",
            "description": "The minimum length of the fifth address line for the country. New addresses will be\nvalidated against this setting, if the address line 5 field is not NULL.\n",
            "format": "int32"
          },
          "addressLine6MinLength": {
            "type": "integer",
            "description": "The minimum length of the sixth address line for the country. New addresses will be\nvalidated against this setting, if the address line 6 field is not NULL.\n",
            "format": "int32"
          },
          "postalCodeMinLength": {
            "type": "integer",
            "description": "The minimum length of the postal code field for the country. New addresses will be\nvalidated against this setting, if the postal code field is not NULL.\n",
            "format": "int32"
          },
          "cityFieldName": {
            "type": "string",
            "description": "The field identified as the city for the country.\nMay be used by the caller to determine which address lines to map into a dedicated city field.\n"
          },
          "stateFieldName": {
            "type": "string",
            "description": "The field identified as the state equivalent for the country.\nMay be used by the caller to determine which address lines to map into a dedicated state field.\n"
          },
          "phoneNumberFormat": {
            "type": "string",
            "description": "The phone number format for the country.\nMay be used to for UI hinting or display formatting.\n"
          },
          "phoneNumberMinLength": {
            "type": "integer",
            "description": "The minimum length of a phone number for this country.",
            "format": "int32"
          },
          "countryCallingCode": {
            "type": "string",
            "description": "The international calling code used for this country."
          },
          "supportsCarrierRoute": {
            "type": "boolean",
            "description": "Indicates whether carrier route is supported for this country."
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Indicates the sequence to use for displaying countries. A 0 means no\nparticular sequence was requested.\n",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "description": "The date the country settings were last modified.",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "description": "The language of the name field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CountryConfigurationTranslationDictionary"
            },
            "description": "A dictionary of translations."
          }
        },
        "description": "The definition of a supported country, including default settings and address labels."
      },
      "CountryConfigurationList": {
        "title": "CountryConfigurationList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryConfiguration"
            },
            "description": ""
          }
        }
      },
      "CustomerGender": {
        "title": "CustomerGender",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code associated with the gender."
          },
          "description": {
            "type": "string",
            "description": "The description of the gender."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "CustomerGenderList": {
        "title": "CustomerGenderList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerGender"
            },
            "description": ""
          }
        }
      },
      "CustomerLanguage": {
        "title": "CustomerLanguage",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code associated with the language."
          },
          "description": {
            "type": "string",
            "description": "The description of the language."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "CustomerLanguageList": {
        "title": "CustomerLanguageList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerLanguage"
            },
            "description": ""
          }
        }
      },
      "CustomerMaritalStatus": {
        "title": "CustomerMaritalStatus",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code associated with the marital status."
          },
          "description": {
            "type": "string",
            "description": "The description of the marital status."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "CustomerMaritalStatusList": {
        "title": "CustomerMaritalStatusList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerMaritalStatus"
            },
            "description": ""
          }
        }
      },
      "CustomerTitle": {
        "title": "CustomerTitle",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code assigned to the customer title."
          },
          "description": {
            "type": "string",
            "description": "The description assigned to the customer title."
          },
          "defaultGenderCode": {
            "type": "string",
            "description": "The code of the default gender associated with the title."
          },
          "defaultMaritalStatusCode": {
            "type": "string",
            "description": "The code of the default marital status associated with the title."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "CustomerTitleList": {
        "title": "CustomerTitleList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerTitle"
            },
            "description": ""
          }
        }
      },
      "CustomerValidationSettings": {
        "title": "CustomerValidationSettings",
        "type": "object",
        "properties": {
          "allowBlankLastName": {
            "type": "boolean",
            "description": "Indicates whether a customer may be saved without a last name."
          },
          "rolesPermittedSaveIncompleteCustomer": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Codes of client roles permitted to save new customer records\nthat to not satisfy the complete customer criteria settings.\n"
          },
          "enableBackgroundCompleteCustomerValidation": {
            "type": "boolean",
            "description": "Indicates whether the background process that flags customers as complete\nor incomplete is enabled.  This process has no bearing on whether\nincomplete customers can be saved or not.\n"
          },
          "completeCustomerCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompleteCustomerCriteria"
            },
            "description": "The sets of valid customer criteria.  When enabled, a customer must meet the\ncriteria defined in at least one of sets in order to be considered complete.\n"
          }
        }
      },
      "EmailType": {
        "title": "EmailType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code assigned to the email type."
          },
          "description": {
            "type": "string",
            "description": "The description of the email type."
          },
          "sortOrder": {
            "type": "integer",
            "description": "The optional sort order of the email type.",
            "format": "int32"
          },
          "enforceUniquePerCustomer": {
            "type": "boolean",
            "description": "Indicates whether a customer may have multiple email addresses under this\nemail type.\n"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether the email type is the one defined as\ndefault for new email addresses.\n"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "EmailTypeList": {
        "title": "EmailTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailType"
            },
            "description": ""
          }
        }
      },
      "PhoneType": {
        "title": "PhoneType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code assigned to the phone type."
          },
          "description": {
            "type": "string",
            "description": "The description of the phone type."
          },
          "sortOrder": {
            "type": "integer",
            "description": "The optional sort order of the phone type.",
            "format": "int32"
          },
          "enforceUniquePerCustomer": {
            "type": "boolean",
            "description": "Indicates whether a customer may have multiple phone numbers under this\nphone type.\n"
          },
          "isPostingMatchKey": {
            "type": "boolean",
            "description": "Indicates whether phone numbers under the phone type may be used\nas a match key when posting data on a customer.\n"
          },
          "mayUseForHouseholding": {
            "type": "boolean",
            "description": "Indicates whether this phone type may be used in the household\nmatch key.  Generally only enabled for a home phones.\n"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether the phone type is the one defined as\ndefault for new phone numbers.\n"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "PhoneTypeList": {
        "title": "PhoneTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneType"
            },
            "description": ""
          }
        }
      },
      "Transaction": {
        "title": "Transaction",
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "description": "The system-assigned ID associated with the transaction.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "The date-time that the transaction occurred.\nThe time is the local time at the store where the transaction occurred.\nNo time zone information is provided.\n",
            "format": "date-time"
          },
          "storeNumber": {
            "type": "integer",
            "description": "The number of the store in which the transaction occurred.",
            "format": "int32"
          },
          "posTransactionNumber": {
            "type": "integer",
            "description": "The number assigned to the transaction by the POS register.\nFor orders entered into EOM, this is the EOM Transaction ID.\n\nThe POS Transaction Number, Transaction Date, Store Number, Register Number\nmake up a four-part key used to identify duplicate transactions, to reconcile\ntransactions with pending transactions, and to match real-time redemptions\nwith transactions.\n\nIn some cases, this field may be overridden by a portion of the order number\nif this is required to ensure matching and reconciliation for orders that\noccurred on a website where the EOM Transaction ID is not known and real-time\npoints or redemptions are enabled.\n",
            "format": "int32"
          },
          "registerNumber": {
            "type": "integer",
            "description": "The number of register or workstation on which the transaction occurred.",
            "format": "int32"
          },
          "salesModuleTransactionId": {
            "type": "integer",
            "description": "The ID of the transaction in the source system.\nFor orders/transactions sent from Sales Audit, this is the ID in the\nSales Audit database.\nFor orders sent directly to CRM from EOM without passing through\nSales Audit, this is the EOM Order ID.\n",
            "format": "int32"
          },
          "transactionSourceId": {
            "type": "integer",
            "description": "The ID if the source system sending the transaction.",
            "format": "int32"
          },
          "transactionTypeCode": {
            "type": "string",
            "description": "The transaction type code associated with the transaction.\nThe type codes are configurable and may differ from one environment to\nanother.\nSee the Transaction Category reference data for the types and their\nparent categories.\n"
          },
          "transactionCategoryCode": {
            "type": "string",
            "description": "The transaction category code associated with the transaction.\nThese are configurable and may differ from one environment to\nanother.\nSee the Transaction Category reference data for the category details.\n"
          },
          "divisionCode": {
            "type": "string",
            "description": "The code of the division in which the transaction occurred."
          },
          "salesChannelCode": {
            "type": "string",
            "description": "The code of the sales channel in which the transaction occurred.\nThe sales channel is auto-assigned based on the store number.\n"
          },
          "salesAssociateNumber": {
            "type": "integer",
            "description": "The sales associate on the transaction header.  This is generally the\nassociate who keyed in the transaction.\n",
            "format": "int32"
          },
          "tenderLineCount": {
            "type": "integer",
            "description": "The number of tender lines associated with the transaction.",
            "format": "int32"
          },
          "totalNetRetailLocal": {
            "type": "number",
            "description": "The amount of the transaction in the store's local currency. This amount\ngenerally excludes tax.\n"
          },
          "totalNetRetailCentral": {
            "type": "number",
            "description": "The amount of the transaction in the head office's currency. This amount\ngenerally excludes tax.\n"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code associated with the store's local currency."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used to convert the local amount into the central\namount.\n"
          },
          "primaryTenderCode": {
            "type": "string",
            "description": "The tender code for the tender with the highest amount."
          },
          "tenderAmountLocal": {
            "type": "number",
            "description": "The total tender amount in local currency.  This is a sum of all of the\nindividual tenders and generally includes tax.\n"
          },
          "tenderAmountCentral": {
            "type": "number",
            "description": "The total tender amount in central currency.  This is a sum of all of the\nindividual tenders and generally includes tax.\n"
          },
          "lineCount": {
            "type": "integer",
            "description": "The number of transaction detail lines on the transaction. Each line is counted\nonce regardless of the number of units on it.\n",
            "format": "int32"
          },
          "postedDate": {
            "type": "string",
            "description": "The date the transaction was physically posted to the table. This may\ndiffer from the transaction date if the transaction was originally rejected\nor held back in the source system.\n",
            "format": "date-time"
          },
          "hasCoupons": {
            "type": "boolean",
            "description": "Indicates whether the transaction is associated with coupons."
          },
          "matchesCompaigns": {
            "type": "boolean",
            "description": "Indicates whether the transaction has matched any campaigns."
          },
          "earnedLoyaltyPoints": {
            "type": "boolean",
            "description": "Indicates whether the transaction had earned loyalty points."
          },
          "flagA": {
            "type": "boolean",
            "description": "Indicates whether the first transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagB": {
            "type": "boolean",
            "description": "Indicates whether the second transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagC": {
            "type": "boolean",
            "description": "Indicates whether the third transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagD": {
            "type": "boolean",
            "description": "Indicates whether the fourth transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagE": {
            "type": "boolean",
            "description": "Indicates whether the fifth transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagF": {
            "type": "boolean",
            "description": "Indicates whether the sixth transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagG": {
            "type": "boolean",
            "description": "Indicates whether the seventh transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "flagH": {
            "type": "boolean",
            "description": "Indicates whether the eight transaction flag is true or false.\nSee the reference data for information on the meaning of this flag.\n"
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionCoupon"
            },
            "description": "A list of the coupons associated with the transaction."
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionLineItem"
            },
            "description": "A list of the line items associated with the transaction."
          },
          "campaignMatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionCampaignMatch"
            },
            "description": "A list of the campaigns associated with the transaction."
          },
          "tenders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionTender"
            },
            "description": "A list of the tenders associated with the transaction."
          }
        }
      },
      "TransactionCampaignMatch": {
        "title": "TransactionCampaignMatch",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The line number associated with the campaign matches.",
            "format": "int32"
          },
          "campaignID": {
            "type": "integer",
            "description": "The ID of the campaigns linked to the transaction line.",
            "format": "int32"
          },
          "campaignDescription": {
            "type": "string",
            "description": "The description of the campaigns linked to the transaction line."
          }
        }
      },
      "TransactionCoupon": {
        "title": "TransactionCoupon",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The line number associated with the coupons.\nA line number of 0 indicates that the coupoon was at the header level.\n",
            "format": "int32"
          },
          "couponSequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the coupon. This begins at 1 and increments for\neach new coupon associated with a given line.\n",
            "format": "int32"
          },
          "couponCode": {
            "type": "string",
            "description": "The coupon code associated with the transaction line."
          }
        }
      },
      "TransactionLineItem": {
        "title": "TransactionLineItem",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The number associated with the detail line.  These numbers may not be\nconsecutive.\n",
            "format": "int32"
          },
          "lineItemType": {
            "type": "string",
            "description": "Indicates whether the line is a sale (has an amount >= 0) or is a\nreturn (has an amount < 0).\n",
            "enum": [
              "Sale",
              "Return"
            ]
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of units found on a given line."
          },
          "netRetailLocal": {
            "type": "number",
            "description": "The extended line amount in local currency, net of all discounts."
          },
          "netRetailCentral": {
            "type": "number",
            "description": "The extended line amount in central currency, net of all discounts."
          },
          "costLocal": {
            "type": "number",
            "description": "The extended cost of items on the line, in local currency."
          },
          "costCentral": {
            "type": "number",
            "description": "Tne extended cost of items on the line, in central currency."
          },
          "markdownPercent": {
            "type": "number",
            "description": "The markdown percent associated with the line."
          },
          "markdownAmountLocal": {
            "type": "number",
            "description": "The markdown amount associated with the line, in local currency."
          },
          "markdownAmountCentral": {
            "type": "number",
            "description": "The markdown amount associated with the line, in central currency."
          },
          "matchesCampaigns": {
            "type": "boolean",
            "description": "Indicates whether the line is associated with any campaigns."
          },
          "comment": {
            "type": "string",
            "description": "The comment associated with the line.\nIf the line is an ordered item, this generally has the word ORDER.\nIf the line is a cancelled item, this generally has the word CANCEL.\n"
          },
          "salesAssociateNumber": {
            "type": "integer",
            "description": "The sales associate on the detail line.  This is generally the salesperson\nfor the item and may differ on each line.\n",
            "format": "int32"
          },
          "styleCode": {
            "type": "string",
            "description": "The style code associated with the line."
          },
          "styleId": {
            "type": "integer",
            "description": "The ID of the style associated with the line.  The same style code\nmay be associated with several different IDs if the code got re-used\nover time.  The ID holds the information on the style at the time\nthe transaction was made.\n",
            "format": "int32"
          },
          "styleAka": {
            "type": "string",
            "description": "The Style AKA for the item on the transaction."
          },
          "styleDescription": {
            "type": "string",
            "description": "The description of the style."
          },
          "vendorStyle": {
            "type": "string",
            "description": "The vendor style code associated with the style."
          },
          "colorCode": {
            "type": "string",
            "description": "The color code of the item on the transaction."
          },
          "colorDescription": {
            "type": "string",
            "description": "The description of the color of the item on the transaction."
          },
          "primarySizeLabel": {
            "type": "string",
            "description": "The primary size label associated with the item on the transaction.\nThis is pulled from the product reference table.\n"
          },
          "secondarySizeLabel": {
            "type": "string",
            "description": "The secondary size label on the item on the transaction.\nThis is pulled from the product reference table.\n"
          },
          "sizeDescription": {
            "type": "string",
            "description": "The size description sent on the transaction for the item."
          },
          "productCode": {
            "type": "integer",
            "description": "The product code on the transaction line.",
            "format": "int64"
          },
          "classCode": {
            "type": "string",
            "description": "The parent class code for the item."
          },
          "classDescription": {
            "type": "string",
            "description": "The description of the parent class code for the item."
          },
          "departmentCode": {
            "type": "string",
            "description": "The parent department code for the item."
          },
          "departmentDescription": {
            "type": "string",
            "description": "The description of the parent department for the item."
          },
          "vendorCode": {
            "type": "string",
            "description": "The vendor code associated with the item."
          },
          "vendorName": {
            "type": "string",
            "description": "The name of the vendor associated with the item."
          }
        }
      },
      "TransactionResultsPage": {
        "title": "TransactionResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TransactionTender": {
        "title": "TransactionTender",
        "type": "object",
        "properties": {
          "tenderLineNumber": {
            "type": "integer",
            "description": "The tender line number.",
            "format": "int32"
          },
          "salesModuleTenderTypeCode": {
            "type": "string",
            "description": "The sales module tender type code.  This maps into a parent tender type code."
          },
          "tenderTypeCode": {
            "type": "string",
            "description": "The tender type code."
          },
          "tenderIdentifier": {
            "type": "string",
            "description": "The identifier associated with the tender.  In the case of a payment by credit\ncard, this is generally the secure credit card token.\nThis identifier may be saved as an alternate key if the tender type is\nmarked as a valid alternate key.\n"
          },
          "tenderAmountLocal": {
            "type": "number",
            "description": "The amount on the tender line, in local currency."
          },
          "tenderAmountCentral": {
            "type": "number",
            "description": "The amount on the tender line, in central currency."
          },
          "alternateKeyCode": {
            "type": "string",
            "description": "The alternate key type code associated with tenders marked as valid\nalternate keys.\n"
          }
        }
      },
      "SalesModuleTenderType": {
        "title": "SalesModuleTenderType",
        "type": "object",
        "properties": {
          "salesModuleTenderTypeCode": {
            "type": "string",
            "description": "The code assigned to the tender type in the source systems."
          },
          "description": {
            "type": "string",
            "description": "The description of the sales module tender type."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A sales module tender type code definition, which can be linked to a parent\ntender type.\n"
      },
      "TenderType": {
        "title": "TenderType",
        "type": "object",
        "properties": {
          "tenderTypeCode": {
            "type": "string",
            "description": "The code assigned to the tender type."
          },
          "description": {
            "type": "string",
            "description": "The description of the tender type."
          },
          "salesModuleTenderTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesModuleTenderType"
            },
            "description": "The sales module tender types associated with the tender type."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A tender type definition, including any child sales module tender types."
      },
      "TenderTypeList": {
        "title": "TenderTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenderType"
            },
            "description": ""
          }
        }
      },
      "TransactionCategory": {
        "title": "TransactionCategory",
        "type": "object",
        "properties": {
          "transactionCategoryCode": {
            "type": "string",
            "description": "The code of the transaction category."
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction category."
          },
          "transactionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "description": "The transaction types under the transaction category."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A transaction category definition, including any child transaction types."
      },
      "TransactionCategoryList": {
        "title": "TransactionCategoryList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionCategory"
            },
            "description": ""
          }
        }
      },
      "TransactionSource": {
        "title": "TransactionSource",
        "type": "object",
        "properties": {
          "transactionSourceId": {
            "type": "integer",
            "description": "The ID number of the source system sending transactions or orders to CRM.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the source system."
          },
          "short_description": {
            "type": "string",
            "description": "The short description of the source system."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TransactionSourceTranslationDictionary"
            },
            "description": "A dictionary of translations."
          }
        }
      },
      "TransactionSourceList": {
        "title": "TransactionSourceList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSource"
            },
            "description": ""
          }
        }
      },
      "TransactionType": {
        "title": "TransactionType",
        "type": "object",
        "properties": {
          "transactionTypeCode": {
            "type": "string",
            "description": "The code associated with the transaction type."
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction type."
          },
          "transactionCategory": {
            "type": "string",
            "description": "The parent transaction category for the transaction type."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A transaction type definition, including a reference to the parent transaction category."
      },
      "PersonalizedCoupon": {
        "title": "PersonalizedCoupon",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number of the customer."
          },
          "couponTypeCode": {
            "type": "string",
            "description": "The type of coupon."
          },
          "startDate": {
            "type": "string",
            "description": "The date that the coupon becomes active.",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "description": "The date that the coupon ends.",
            "format": "date-time"
          },
          "couponCode": {
            "type": "string",
            "description": "The personalized coupon number/code."
          }
        },
        "description": "A personalized coupon associated to a customer."
      },
      "LoyaltyAdjustmentRequest": {
        "title": "LoyaltyAdjustmentRequest",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number asigned to the customer."
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The reason type code to associate with the adjustment.  Only reason type\ncodes identified as adjustment codes may be used.\n"
          },
          "transactionDate": {
            "type": "string",
            "description": "The date associated with the adjustment.  If not provided, the current\ndate-time will be used.\nAny time zone information in the request will be discarded.\n",
            "format": "date-time"
          },
          "regularPoints": {
            "type": "integer",
            "description": "The number of regular points to include on the adjustment. At least one of the four\npoint fields must be provided.\n",
            "format": "int32"
          },
          "headerConditionalPoints": {
            "type": "integer",
            "description": "The number of header conditional points to include on the adjustment. At least one of the four\npoint fields must be provided.\n",
            "format": "int32"
          },
          "detailConditionalPoints": {
            "type": "integer",
            "description": "The number of header conditional points to include on the adjustment. At least one of the four point fields must be provided.",
            "format": "int32"
          },
          "tenderConditionalPoints": {
            "type": "integer",
            "description": "The number of header conditional points to include on the adjustment. At least one of the four point fields must be provided.",
            "format": "int32"
          },
          "comments": {
            "maxLength": 30,
            "type": "string",
            "description": "Optional comment associated with the adjustment."
          }
        },
        "description": "The adjustment to post."
      },
      "LoyaltyMembership": {
        "title": "LoyaltyMembership",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "loyaltyPlanId": {
            "type": "integer",
            "description": "ID of the loyalty plan for the membership.",
            "format": "int32"
          },
          "joinDate": {
            "type": "string",
            "description": "Date when the customer first joined the plan.",
            "format": "date"
          },
          "membershipTypeCode": {
            "type": "string",
            "description": "The customer's current membership type in the plan. When returned from\na request to pre-calculate points for an in-progress transaction, this will\nbe the expected new membership once the transaction is posted.\n"
          },
          "membershipStatus": {
            "type": "string",
            "enum": [
              "Active",
              "PendingDowngrade",
              "PendingTermination",
              "Terminated"
            ],
            "description": "Status of the membership, as calculated based on the last membership action code."
          },
          "lastMembershipActionCode": {
            "type": "integer",
            "description": "The code of the last action taken on the membership.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will be the expected new value once the transaction is posted.\n",
            "format": "int32"
          },
          "terminationDate": {
            "type": "string",
            "description": "The date when the customer membership was terminated, or is scheduled\nto be terminated.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will be the expected new date once the transaction is posted.\n",
            "format": "date"
          },
          "downgradeReassessDate": {
            "type": "string",
            "description": "The date the customer will be assessed against the membership level criteria\nto determine if they still qualify or should be downgraded.\n",
            "format": "date"
          },
          "terminationReassessDate": {
            "type": "string",
            "description": "The date the customer will be assessed against the membership criteria\nto determine if their membership should be terminated.\n",
            "format": "date"
          },
          "downgradeEligibilityDate": {
            "type": "string",
            "description": "The date the customer is eligible to be downgraded, if they no longer\nmeet the criteria of their current level.\n",
            "format": "date"
          },
          "lastRenewalDate": {
            "type": "string",
            "description": "The date the membership was last renewed.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will be the expected new renewal date after the\ntransaction is posted.\n",
            "format": "date"
          },
          "lastActivityDate": {
            "type": "string",
            "description": "The last date that points-earning activity (sales, redemptions, pending points, etc)\nhas posted to the membership.\n",
            "format": "date-time"
          },
          "lastUpgradeAssessDate": {
            "type": "string",
            "description": "The date when the customer was last assessed to determine if they qualify\nfor an upgrade to a higher level, regardless of whether or not they were\nactually upgraded.\n",
            "format": "date"
          },
          "lastDowngradeAssessDate": {
            "type": "string",
            "description": "The last date when the customer was assessed to determine if they qualify\nfor a downgrade to a lower level, regardless of whether or not they were\nactually downgraded.\n",
            "format": "date"
          },
          "lastRenewalAssessDate": {
            "type": "string",
            "description": "The last date when the customer was assessed to determine if they qualify\nfor a renewal, regardless of whether or not they were actually renewed.\n",
            "format": "date"
          },
          "lastExpirationAssessDate": {
            "type": "string",
            "description": "The last date that a customer's loyalty transactions were evaluated\nagainst the expiry criteria to determine if they qualified to be expired\nor not. This date is updated regardless of whether any loyalty transactions\nactually got expired as a result of the assessment.\n",
            "format": "date"
          },
          "lastTerminationAssessDate": {
            "type": "string",
            "description": "The last date when the customer was assessed to determine if they qualified\nto be terminated, regardless of whether they actually got terminated as\na result.\n",
            "format": "date"
          },
          "totalPointsSale": {
            "type": "integer",
            "description": "The total points earned in sale/return transactions since the customer\nbecame a member. This includes regular and conditional points.\n",
            "format": "int64"
          },
          "totalPointsRedemption": {
            "type": "integer",
            "description": "The total points redeemed since the customer became a member.",
            "format": "int64"
          },
          "totalPointsAdjustment": {
            "type": "integer",
            "description": "The total points accrued as a result of point adjustments since the\ncustomer became a member.\n",
            "format": "int64"
          },
          "totalPointsExpired": {
            "type": "integer",
            "description": "The total points expired since the customer became a member.",
            "format": "int64"
          },
          "totalConditionalPoints": {
            "type": "integer",
            "description": "The total points earned from conditional point rules since the customer\nbecame a member.\n",
            "format": "int64"
          },
          "numberOfRedemptions": {
            "type": "integer",
            "description": "The total number of point redemptions processed since the customer\nbecame a member.  This includes mass, manual, and automatic redemptions.\n",
            "format": "int64"
          },
          "currentPendingPoints": {
            "type": "integer",
            "description": "The total pending points on the membership.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will be the expected new pending point total after\nthe transaction is posted.\n",
            "format": "int64"
          },
          "currentPointBalance": {
            "type": "integer",
            "description": "The current balance of points in the membership, excluding pending points.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will the expected new balance after the transaction is posted.\n",
            "format": "int64"
          },
          "currentPointBalanceIncludingPending": {
            "type": "integer",
            "description": "new in 2019.1.0\nThe current balance of points in the membership, including pending points.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will the expected new balance after the transaction is posted.\n",
            "format": "int64"
          },
          "availablePointBalance": {
            "type": "integer",
            "description": "The sum of points available for redemption.\nThis is dependent on the parameter that determines how many days until\nearned points become available for redemption, as well as the setting\nthat governs whether pending points are included.\nWhen returned from a request to pre-calculate points for an in-progress\ntransaction, this will the expected new balance after the transaction is posted.\n",
            "format": "int64"
          },
          "availablePointsForCurrentTransaction": {
            "type": "integer",
            "description": "Sum of available points including the reversal and redemption points \nfrom the current transaction, and possibly including the earned points \nfrom the current transaction, if the plan is configured to include those.\n",
            "format": "int64"
          },
          "lastDatePointsExpired": {
            "type": "string",
            "description": "The last date that points were expired from the membership.",
            "format": "date"
          },
          "lastNumberOfPointsExpired": {
            "type": "integer",
            "description": "The number of points expired on the last expiry for this membership.",
            "format": "int64"
          },
          "lastDatePointsPosted": {
            "type": "string",
            "description": "The last date that points were posted to the membership.",
            "format": "date-time"
          },
          "createStoreNumber": {
            "type": "integer",
            "description": "The store in which the membership was created.",
            "format": "int32"
          },
          "createUser": {
            "type": "string",
            "description": "The user who created the membership."
          },
          "createDate": {
            "type": "string",
            "description": "The date the membership was saved into the database.",
            "format": "date-time"
          },
          "modifyStoreNumber": {
            "type": "integer",
            "description": "The store who made the most recent change to the membership.",
            "format": "int32"
          },
          "modifyUser": {
            "type": "string",
            "description": "The user who made the most recent change to the membership."
          },
          "modifyDate": {
            "type": "string",
            "description": "The date the membership was most recently modified.",
            "format": "date-time"
          }
        }
      },
      "LoyaltyMembershipList": {
        "title": "LoyaltyMembershipList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembership"
            },
            "description": ""
          }
        }
      },
      "LoyaltyMembershipModificationRequest": {
        "title": "LoyaltyMembershipModificationRequest",
        "required": [
          "loyaltyPlanId"
        ],
        "type": "object",
        "properties": {
          "loyaltyPlanId": {
            "type": "integer",
            "description": "ID of the loyalty plan for which to modify the membership",
            "format": "int32"
          },
          "joinDate": {
            "type": "string",
            "description": "The date when the customer first joined the plan.\nDuring enrollment, defaults to the current system date if no date\nis provided.  Date may be in the past, as long as it is not earlier\nthan the plan start date.\nIf the customer is already an active member and join date is being\nchanged, it may not be newer than the date on any existing loyalty\ntransactions (posted, pending, archived).\nWhen past dates are used, retroactive points may be assigned to the\ncustomer for existing transactions.  For new memberships, retroactive\npoints calculation depends on the plan configuration settings.\nDuring a membership modification, the join date may not be set to\na date later than the currently saved join date.\n",
            "format": "date"
          },
          "membershipTypeCode": {
            "type": "string",
            "description": "The membership type code to assign to the customer."
          },
          "terminationDate": {
            "type": "string",
            "description": "The date when the customer membership was terminated, or is scheduled\nto be terminated.\nMay be edited only if the plan is configured to allow external edits\nto this field.\nIgnored during an enrollment, renewal and termination.\n",
            "format": "date"
          },
          "downgradeEligibilityDate": {
            "type": "string",
            "description": "The date the customer is eligible to be downgraded, if they no longer\nmeet the criteria of their current level.\nMay be edited if the loyalty plan is configured to allow external edits\nto this field.\nIgnored during an enrollment or renewal.\n",
            "format": "date"
          }
        },
        "description": "The parameters required to perform a loyalty membership modification,\nsuch as an enrollment, renewal, or a modification.\n"
      },
      "LoyaltyRedemptionDetail": {
        "title": "LoyaltyRedemptionDetail",
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The reason type code associated with the redemption."
          },
          "reasonInstanceNumber": {
            "type": "integer",
            "description": "The instance of the redemption reason.",
            "format": "int32"
          },
          "redeemedPoints": {
            "type": "integer",
            "description": "The pro-rated redeemed points.",
            "format": "int32"
          },
          "discountAmount": {
            "type": "string",
            "description": "The pro-rated redemption discount."
          },
          "reversalStatus": {
            "type": "string",
            "description": "Indicates whether the redemption instance has been reversed\nand if so, in part or in full.\n"
          },
          "isReversal": {
            "type": "boolean",
            "description": "Indicates whether the instance is a reversal of\na prior redemption.\n"
          }
        }
      },
      "LoyaltyRedemptionRequest": {
        "title": "LoyaltyRedemptionRequest",
        "type": "object",
        "description": "The redemption to post to a customer.\nThe requested redemptions will be evaluated against the redemption\nconditions as well as the transaction basket (if applicable) to\ndetermine whether or not the redemption is allowed.\nRedemptions where the result is an immediate discount may only be posted\ntogether with a transaction basket.\n",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer."
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The code of the reason type associated with the redemption request."
          },
          "comment": {
            "type": "string",
            "description": "The comment to save on the redemption."
          },
          "variableDiscountAmount": {
            "type": "number",
            "description": "The discount amount chosen by the shopper for a variable redemption (V-type).\nThis amount will get stored on the redemption header and pro-rated alongside\nthe points deducted in the redemption details.\nRequired for V redemptions.  Ignored for other redemption types.\nIf a value is provided for other redemption types, that may interfere with\nproper association of the request ID (if provided).\n"
          },
          "transactionAmount": {
            "type": "number",
            "description": "The transaction amount that the T-type percentage discount applies to. CRM will\nmultiply this amount by the percentage value and apply the maximum reward value\nin order determine the final discount to pro-rate against the items and store\nin the redemption details.\nThis amount is NOT used for min spend evaluations.\nIgnored for other redemption types.\n"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code associated with the variable discount amount."
          },
          "requestId": {
            "type": "string",
            "description": "An optional unique ID provided for the redemption. If provided, it will be\nechoed back as part of the redemption transaction. It is not permanently saved.\n"
          }
        }
      },
      "LoyaltyRedemptionReversalRequest": {
        "title": "LoyaltyRedemptionReversalRequest",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number of the customer on the redemption reversal."
          },
          "loyaltyTransactionId": {
            "type": "integer",
            "description": "The ID of the redemption to reverse.",
            "format": "int32"
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The reason type code for the reversal.  Only reason type codes\nidentified as reversal codes may be used.\n"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment associated with the reversal."
          }
        },
        "description": "The redemption to manually reverse.\nGenerally, this is only used to reverse redemptions that were posted\nwithout any link to a transaction.  If a transaction was posted posted\ntogether with the redemption, then the reversal will happen automatically\nif a post-void on the transaction is performed, or if an item is returned.\n"
      },
      "LoyaltyTransaction": {
        "title": "LoyaltyTransaction",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number asigned to the customer."
          },
          "loyaltyPlanId": {
            "type": "integer",
            "description": "The ID assigned to the loyalty plan.",
            "format": "int32"
          },
          "loyaltyTransactionId": {
            "type": "integer",
            "description": "The internal ID assigned to the loyalty transaction.",
            "format": "int32"
          },
          "transactionId": {
            "type": "integer",
            "description": "The internal ID of the retail transaction that triggered the loyalty entry.\nThis will be NULL for activities such as adjustments and head office\nredemptions, since those occur outside of a sale transaction.\n",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "The date-time the loyalty transaction occurred.\nWhen posting a new loyalty transaction, the current date-time will be\nused if no specific date-time has been provided.\nNo time zone information is provided.\n",
            "format": "date-time"
          },
          "storeNumber": {
            "type": "integer",
            "description": "The store number in which the loyalty transaction occurred.",
            "format": "int32"
          },
          "registerNumber": {
            "type": "integer",
            "description": "The register number associated with the retail transaction that\ntriggered the creation of a pending loyalty transaction.\nNot populated for posted loyalty transactions.\n",
            "format": "int32"
          },
          "posTransactionNumber": {
            "type": "integer",
            "description": "The POS Transaction number associated with the retail transaction that\ntriggered the creation of a pending loyalty transaction.\nNot populated for posted loyalty transactions.\n",
            "format": "int32"
          },
          "transactionTypeCode": {
            "type": "string",
            "description": "The type associated with the retail transaction that triggered the\ncreation of a pending loyalty transaction.\nNot populated for posted loyalty transactions.\n"
          },
          "transactionFlagA": {
            "type": "boolean",
            "description": "Indicates the value for the first transaction flag."
          },
          "transactionFlagB": {
            "type": "boolean",
            "description": "Indicates the value for the second transaction flag."
          },
          "transactionFlagC": {
            "type": "boolean",
            "description": "Indicates the value for the third transaction flag."
          },
          "transactionFlagD": {
            "type": "boolean",
            "description": "Indicates the value for the fourth transaction flag."
          },
          "transactionFlagE": {
            "type": "boolean",
            "description": "Indicates the value for the fifth transaction flag."
          },
          "transactionFlagF": {
            "type": "boolean",
            "description": "Indicates the value for the sixth transaction flag."
          },
          "transactionFlagG": {
            "type": "boolean",
            "description": "Indicates the value for the seventh transaction flag."
          },
          "transactionFlagH": {
            "type": "boolean",
            "description": "Indicates the value for the eighth transaction flag."
          },
          "pointsPosted": {
            "type": "integer",
            "description": "The total points posted for the transaction. This includes regular points\nand conditional points.\n",
            "format": "int32"
          },
          "pointsAvailable": {
            "type": "integer",
            "description": "The points on the loyalty transaction that are available for redemption.",
            "format": "int32"
          },
          "totalNetRetailLocal": {
            "type": "number",
            "description": "The total amount of the transaction, in local currency."
          },
          "totalNetUnits": {
            "type": "number",
            "description": "The total number of units on the transaction.  Represents the sum of\nthe quantities on the transaction lines.\n"
          },
          "totalNetRetailCentral": {
            "type": "number",
            "description": "The total amount of the transaction, in central (head office) currency."
          },
          "exchangeRate": {
            "type": "number",
            "description": "The exchange rate used to convert the local amount to the central amount."
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code associated with the local amounts."
          },
          "regularPoints": {
            "type": "integer",
            "description": "The number of regular points associated with the loyalty transaction.\nThis may be negative for returns, redemptions, and some adjustments.\nIgnored when creating a new loyalty transaction if the category is\nnot an adjustment.\n",
            "format": "int32"
          },
          "headerConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on header-level conditions\nassociated with the loyalty transaction.  This includes conditional\npoints based on store, date, total amounts, header coupons,\nmembership types, etc.\nIgnored when creating a new loyalty transaction if the category is\nnot an adjustment.\n",
            "format": "int32"
          },
          "detailConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on detail-level conditions\nassociated with the loyalty transaction.  This includes conditional\npoints based on items or item-level coupons.\nIgnored when creating a new loyalty transaction if the category is\nnnot an adjustment.\n",
            "format": "int32"
          },
          "tenderConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on tender-level conditions\nassociated with the loyalty transaction.  This includes conditional\npoints based on the tender types used as payment.\nIgnored when creating a new loyalty transaction if the category is\nnot an adjustment.\n",
            "format": "int32"
          },
          "pointsPostedDate": {
            "type": "string",
            "description": "The date the loyalty transaction posted into the database.",
            "format": "date-time"
          },
          "generatedCertificateNumber": {
            "type": "string",
            "description": "The certificate number generated by a redemption where the reason type\nhad a result of certificate.\n"
          },
          "hasMatchingOriginal": {
            "type": "integer",
            "description": "Indicates whether a loyalty transaction containing a return has been\nassociated with a matching original transaction.  The list of\noriginal loyalty transaction IDs can be found in the detail section.\n",
            "format": "int32"
          },
          "redemptionReversalStatus": {
            "type": "string",
            "enum": [
              "NotReversed",
              "PartiallyReversed",
              "FullyReversed"
            ],
            "description": "The reversal status associated with a redemption.\nIf the plan configuration allows it, redemptions are automatically\nreversed (partialy or fully) if they are associated with a transaction\nand some or all items from the original transactions are returned.\n"
          },
          "redemptionAmount": {
            "type": "string",
            "description": "The reward amount associated with the redemption.  The amount is in the\ncurrency stated by the currency code.\n"
          },
          "rewardCategory": {
            "type": "string",
            "enum": [
              "Adjustment",
              "Redemption",
              "Sale",
              "Reversal",
              "PendingSale"
            ],
            "description": "The type of loyalty transaction.\nWhen creating a new loyalty transaction, a type of Sale will be automatically\nconverted to a PendingSale.\n"
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The reason type code associated with the loyalty transaction.\nIgnored when creating a new loyalty transaction with a type of Sale\nor PendingSale. Required for Adjustments, Redemptions, and Reversals.\nFor these, the reason type will be validated to ensure that it is\navailable for the reward category and that it is active.\n"
          },
          "comments": {
            "type": "string",
            "description": "The comment saved on the loyalty transaction. If a comment is not\nprovided, the system will save the description of the reason type\ninto the comment field for adjustment, redemptions, and reversals.\n"
          },
          "totalRedemptionDiscountLocal": {
            "type": "string",
            "description": "The total redemption discount in local currency."
          },
          "totalRedemptionDiscountCentral": {
            "type": "string",
            "description": "The total redemption discount in central currency."
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTransactionLine"
            },
            "description": "A list of the loyalty transaction lines.\nNot applicable to adjustments, redemptions, and reversals.\n"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTransactionRule"
            },
            "description": ""
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTransactionCoupon"
            },
            "description": "A list of the coupon codes on a loyalty transaction.\nOnly populated for pending loyalty transactions.\nCoupons for posted transactions may be requested using\nthe linked transaction.\n"
          },
          "redemptionDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyRedemptionDetail"
            },
            "description": "The details of the reward redemption."
          },
          "requestId": {
            "type": "string",
            "description": "If this is a redemption transaction, this field is the request ID,\nif any, provided in the associated redemption request.\nThis field will not be present in the response body at all\nif no request ID was provided in the redemption request.\nThe request ID is not permanently saved, so this will only be\npresent at the time the transaction is first posted to the loyalty service.\n"
          }
        }
      },
      "LoyaltyTransactionLine": {
        "title": "LoyaltyTransactionLine",
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "integer",
            "description": "The number of the transaction line.",
            "format": "int32"
          },
          "classCode": {
            "type": "integer",
            "description": "The class code of the item on the transaction line.",
            "format": "int32"
          },
          "styleId": {
            "type": "integer",
            "description": "The internal ID of the style on the transaction line.\nMay be NULL on a pending transaction if the product code was not\nrecognized.\n",
            "format": "int32"
          },
          "merchStyleCode": {
            "type": "string",
            "description": "The merchandising style code of the item on the transaction line."
          },
          "productCode": {
            "type": "integer",
            "description": "The product code associated with the transaction.\nPopulated for pending transactions only.\n",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "The number of units purchased on the line. The quantity will be negative\non a return line.\n"
          },
          "netRetailLocal": {
            "type": "number",
            "description": "The extended amount on the line, in local currency."
          },
          "markdownPercent": {
            "type": "number",
            "description": "The markdown percent associated with the item."
          },
          "netRetailCentral": {
            "type": "number",
            "description": "The extended amount on the line, in central currency."
          },
          "regularPoints": {
            "type": "integer",
            "description": "The number of regular points earned on the line.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "headerConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on header-level conditions\nassociated with the loyalty transaction, calculated at the line level.\nThis includes conditional points based on store, date, total amounts,\nheader coupons, membership types, etc.\nThe compound points setting governs whether detail conditional points\nare factored into the calculation.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "detailConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on detail-level conditions\nassociated with the transaction line.  This includes conditional points\nbased on items or item-level coupons.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "tenderConditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points based on tender-level conditions\nassociated with the transaction.  For ratio-based rules, calculated at\nthe line item level by multiplying the percentage contribution of the\ntender against the sum of all points on a given line (including other\nconditional points) and applying the rule ratio.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "returnQuantity": {
            "type": "integer",
            "description": "The number of units that have subsequently been returned.  The line will\nbe fully returned when the return quantity matches the purchase quantity.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "originalLoyaltyTransactionId": {
            "type": "integer",
            "description": "The ID of the original transaction identified by CRM as the match for\na return line.  The match is done using style and unit amount, going\nback a configurable number of days.\nWhen creating a new loyalty transaction, for return lines with quantities\ngreater than 1, if the items have different matching originals, the system\nwill split the line such that each line has a single unique original ID.\nIgnored when creating a new loyalty transaction.\n",
            "format": "int32"
          },
          "originalLoyaltyTransactionLineNumber": {
            "type": "integer",
            "description": "The line number of the matching line on the original transaction\nidentified by CRM as the match for a return line. The match is done using\nstyle and unit amount, going back a configurable number of days.\nWhen creating a new loyalty transaction, for return lines with quantities\ngreater than 1, if the items have different matching original line numbers,\nthe system will split the line such that each line has a single unique\noriginal ID and line number.\n",
            "format": "int32"
          }
        },
        "description": "A line item on a loyalty transaction."
      },
      "LoyaltyTransactionRequest": {
        "title": "LoyaltyTransactionRequest",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number of the customer making the loyalty transaction."
          },
          "basket": {
            "$ref": "#/components/schemas/TransactionBasket"
          },
          "redemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyRedemptionRequest"
            },
            "description": ""
          }
        },
        "description": "Used to submit real-time loyalty transactions and redemption requests. The real-time\npoints configuration on the store determines whether the basket will be posted\ninto the pending table or whether it will be used to evaluate redemptions and\nupdate them with the key transaction match fields for future reconciliation.\n"
      },
      "LoyaltyTransactionResult": {
        "title": "LoyaltyTransactionResult",
        "type": "object",
        "properties": {
          "loyaltyTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTransaction"
            },
            "description": "Contains the full loyalty transaction model, including lines, coupons,\nrules (etc) for the loyalty transaction(s) being pre-calculated, posted\nor retrieved.\n"
          },
          "loyaltyBestAutoRedemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardReason"
            },
            "description": "When pre-calculating points for a new transaction, this will contain\nthe best automatic redemption reason type available for the customer\nunder each plan, based on the incoming transaction details and the\ncustomer's available points.\n"
          },
          "loyaltyAvailableRedemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardReason"
            },
            "description": "When pre-calculating points for a new transaction, this will contain\nthe fulllist of available redemption reason type for the customer\nunder each plan, based on the incoming transaction details and the\ncustomer's available points.\n"
          },
          "loyaltyMembership": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembership"
            },
            "description": "Contains the main membership and point aggregate fields for each\nplan that the customer is a member of.  When pre-calculating points\nfor a new transaction, this will contain the expected new information\nas it will look like once the transaction is posted to the pending tables.\nIf the transaction is modified before being posted, the actual result\nmay be different than the expected result.\n"
          },
          "availableCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalizedCoupon"
            },
            "description": "Provides a list of the available personalized coupons for the customer."
          }
        }
      },
      "LoyaltyTransactionResultsPage": {
        "title": "LoyaltyTransactionResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTransaction"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LoyaltyTransactionReversalRequest": {
        "title": "LoyaltyTransactionReversalRequest",
        "required": [
          "storeNumber",
          "registerNumber",
          "posTransactionNumber",
          "transactionDate"
        ],
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number asigned to the customer."
          },
          "storeNumber": {
            "type": "integer",
            "description": "The store number associated with the pending transaction to reverse.",
            "format": "int32"
          },
          "registerNumber": {
            "type": "integer",
            "description": "The register number associated with the pending transaction to reverse.",
            "format": "int32"
          },
          "posTransactionNumber": {
            "type": "integer",
            "description": "The POS Transaction Number associated with the pending transaction to reverse.",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "The date of the transaction to reverse.  Only match on date (not time).\nAny time zone information in the request will be discarded.\n",
            "format": "date-time"
          }
        },
        "description": "The pending loyalty transaction to reverse (post-void).\nTBD - This cannot be used to reverse or post-void a loyalty transaction that has already\nbeen reconciled and moved into the live tables.  This restriction is in place\nfor POS since Sales Audit sends the reversal for reconciled transactions and\nCRM cannot receive it twice.\n"
      },
      "LoyaltyTransactionRule": {
        "title": "LoyaltyTransactionRule",
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "integer",
            "description": "The ID of the conditional point rule that applied to the transaction\nor transaction line.\n",
            "format": "int32"
          },
          "lineNumber": {
            "type": "integer",
            "description": "The detail line number to which the rule applied.",
            "format": "int32"
          },
          "ruleType": {
            "type": "string",
            "description": "The type of rule being applied.",
            "enum": [
              "Detail",
              "Header",
              "Tender"
            ]
          },
          "conditionalPoints": {
            "type": "integer",
            "description": "The number of conditional points awarded for the transation line/rule.",
            "format": "int32"
          },
          "isReturn": {
            "type": "boolean",
            "description": "Indicates whether the entry is caused by a return."
          },
          "flatPointsHaveBeenReturned": {
            "type": "boolean",
            "description": "Indicates whether a flat point rule has since been returned.  This flag\nprevents the system from processing the return more than once.\n"
          }
        }
      },
      "LoyaltyTransactionCoupon": {
        "title": "LoyaltyTransactionCoupon",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The line number associated with the coupons in the loyalty tables.\nA line number of 0 indicates that the coupon was at the header level.\n",
            "format": "int32"
          },
          "couponSequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the coupon. This begins at 1 and increments for\neach new coupon associated with a given line.\n",
            "format": "int32"
          },
          "couponCode": {
            "type": "string",
            "description": "The coupon code associated with the loyalty transaction line."
          }
        }
      },
      "TransactionBasket": {
        "title": "TransactionBasket",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "description": "The number assigned to the customer.\nDuring a POST operation, all cutomerNumber values in a call must match.\n"
          },
          "transactionDate": {
            "type": "string",
            "description": "The LOCAL date and time of the transaction.\nAny time zone information in the request will be discarded.\nThe local date/time is used so that conditional bonus rules based on time-of-day\nwill be applied based on the time the shopper is making his purchase.\n",
            "format": "date-time"
          },
          "storeNumber": {
            "type": "integer",
            "description": "The number of the store in which the transaction occurred.",
            "format": "int32"
          },
          "posTransactionNumber": {
            "type": "integer",
            "description": "The number assigned to the transaction by the POS register.\nFor orders entered into EOM, this is generally the EOM Transaction ID.\n\nThe POS Transaction Number, Transaction Date, Store Number, Register Number\nmake up a four-part key used to identify duplicate transactions, to reconcile\ntransactions with pending transactions, and to match real-time redemptions\nwith transactions.  The combination must be guaranteed to be unique across\nthe database.\n",
            "format": "int32"
          },
          "registerNumber": {
            "type": "integer",
            "description": "The register on which the transaction was entered.  For orders entered\non a device that is not a register, a dummy register number can be used\nwhere that number doesn't collide with any actual store registers for\nthe same store number.\n",
            "format": "int32"
          },
          "transactionTypeCode": {
            "type": "string",
            "description": "The transaction type associated with the transaction.  These are configurable\nand can be found in the transaction category reference data.\n"
          },
          "salesAssociateNumber": {
            "type": "integer",
            "description": "The sales associate responsible for the transaction.",
            "format": "int32"
          },
          "totalNetRetailLocal": {
            "type": "number",
            "description": "The total amount of the transaction in the store's local currency. This\nnumber generally excludes taxes.\n"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code for the local currency amounts."
          },
          "itemsAmount": {
            "type": "number",
            "description": "Total amount of all items including non-merchandise.  This amount should\nreflect the amount BEFORE any CRM redemption discounts are applied, but\nafter other types of discounts are applied. Includes ordered items.\n\nUsed to evaluate whether a redemption with a minimum spend threshold\nis allowed on this transaction.\n\nRecommendation - Exclude returned items from the total in order to allow\nthe customer to re-apply a redemption with a minimum spend, without the\nspend being reduced by the return.\n"
          },
          "merchItemsAmount": {
            "type": "number",
            "description": "The total amount of merchandise items only. This amount should\nreflect the amount BEFORE any CRM redemption discounts are applied, but\nafter other types of discounts are applied.  Includes ordered items.\n\nUsed to evaluate whether a redemption with a minimum spend threshold\nand a merch-only restriction is allowed on this transaction.\n\nRecommendation - Exclude returned items from the total in order to allow\nthe customer to re-apply a redemption with a minimum spend, without the\nspend being reduced by the return.\n"
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionBasketCoupon"
            },
            "description": "The coupons associated with the transaction. Used to evaluate if any\ncoupon-based conditional points apply.\n"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionBasketLineItem"
            },
            "description": "The items on a transaction. Used to calculate both regular and\nconditional points.\n"
          },
          "tenders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionBasketTender"
            },
            "description": "The tenders on the transaction. Used to evaluate if any tender\nconditional points apply.\n"
          }
        },
        "description": "The contents of the transaction basket.\n\nIf a basket is being submitted with redemption requests, and real-time points posting\nis off for the calling store, the basket will be used to determine if the\nredemption(s) are allowed and if so, its key match fields will be posted to the\nredemption such that it can be reconciled with the transaction when it is posted\nat a later date.  If real-time points is off, details and tenders may be omitted\nto save bandwidth.\n"
      },
      "TransactionBasketCoupon": {
        "title": "TransactionBasketCoupon",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The detail line number to which the coupon applies. Use 0 for header-level\ncoupons that apply to the whole transaction.\n",
            "format": "int32"
          },
          "couponCode": {
            "type": "string",
            "description": "The coupon code being applied to the transaction or line."
          }
        }
      },
      "TransactionBasketLineItem": {
        "title": "TransactionBasketLineItem",
        "type": "object",
        "properties": {
          "lineItemNumber": {
            "type": "integer",
            "description": "The line number associated with the item.",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity sold of the item."
          },
          "netRetailLocal": {
            "type": "number",
            "description": "The extended amount of the item after all discounts, in local currency."
          },
          "markdownPercent": {
            "type": "number",
            "description": "The markdown percent applied to the item."
          },
          "productCode": {
            "type": "integer",
            "description": "The product code (UPC) purchased by the customer.\nEither the style OR the product should be provided. An error\nwill occur if both are provided together.\nNOTE: invalid values will be accepted unless the database-level configuration\nhas enabled item validations.\n",
            "format": "int64"
          },
          "styleCode": {
            "type": "string",
            "description": "The style code corresponding to the item being purchased.\nEither the style OR the product should be provided. An error\nwill occur if both are provided together.\nNOTE: invalid values will be accepted unless the database-level configuration\nhas enabled item validations.\n"
          }
        }
      },
      "TransactionBasketTender": {
        "title": "TransactionBasketTender",
        "type": "object",
        "properties": {
          "tenderLineNumber": {
            "type": "integer",
            "description": "The line number corresponding to the tender.",
            "format": "int32"
          },
          "tenderTypeCode": {
            "type": "string",
            "description": "The tender type code used for payment.\nNOTE: invalid values will be accepted unless the database-level configuration\nhas enabled item validations.\n"
          },
          "tenderAmount": {
            "type": "number",
            "description": "The amount of payment on the tender.  This generally includes taxes."
          }
        }
      },
      "LoyaltyMembershipActionCode": {
        "title": "LoyaltyMembershipActionCode",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The code assigned to the action.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the action."
          },
          "isJoin": {
            "type": "boolean",
            "description": "Indicates whether the action involves a new membership being created\nfor a customer joining a plan for the first time.\n"
          },
          "isRenewal": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being renewed."
          },
          "isUpgrade": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being upgraded to a higher level."
          },
          "isDowngrade": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being downgraded to a lower level."
          },
          "isPendingDowngrade": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being moved into pending downgrade status."
          },
          "isPendingTermination": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being moved into pending termination status."
          },
          "isTermination": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership being terminated."
          },
          "isDowngradeProtectionDateChange": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership having its downgrade protection period modified."
          },
          "isTerminationDateChange": {
            "type": "boolean",
            "description": "Indicates whether the action involves a membership having its terminate date changed."
          },
          "isBatchOperation": {
            "type": "boolean",
            "description": "Indicates whether the action was performed as part of a batch change to customer memberships."
          },
          "isStandardCriteria": {
            "type": "boolean",
            "description": "Indicates whether the action was performed based on plan-level assessment criteria."
          },
          "isOnSchedule": {
            "type": "boolean",
            "description": "Indicates whether the action was performed as part of a change based on a scheduled execution."
          },
          "isDeferred": {
            "type": "boolean",
            "description": "Indicates whether the action was deferred."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "An action code which defines the reasons for a customer membership change."
      },
      "LoyaltyMembershipActionCodeList": {
        "title": "LoyaltyMembershipActionCodeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipActionCode"
            },
            "description": ""
          }
        }
      },
      "LoyaltyMembershipStyle": {
        "title": "LoyaltyMembershipStyle",
        "type": "object",
        "properties": {
          "styleCode": {
            "type": "string",
            "description": "The code of the style."
          },
          "styleId": {
            "type": "integer",
            "description": "The ID of the style.",
            "format": "int32"
          },
          "styleDescription": {
            "type": "string",
            "description": "The description of the style."
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A style associated with the membership type"
      },
      "LoyaltyMembershipType": {
        "title": "LoyaltyMembershipType",
        "type": "object",
        "properties": {
          "membershipTypeCode": {
            "type": "string",
            "description": "The code identifying the membership type within the parent loyalty plan."
          },
          "description": {
            "type": "string",
            "description": "The description of the membership type."
          },
          "effectiveDate": {
            "type": "string",
            "description": "The date the membership type became active.",
            "format": "date"
          },
          "level": {
            "type": "integer",
            "description": "The level associated with the membership.  Higher levels are considered better and are\ntreated as upgrades.  Lower levels are considered worse and are treated as downgrades.\n",
            "format": "int32"
          },
          "assignAtPos": {
            "type": "boolean",
            "description": "Indicates whether a membership type can be assigned to a customer at\npoint-of-service, or whether it is reserved for head office assignment.\n"
          },
          "posPromotionCustomerLevel": {
            "type": "integer",
            "description": "The customer level associated with this membership type, for use at point-of-service to\nidentify promotions that are restricted to customers who have specific membership levels.\n",
            "format": "int32"
          },
          "discountPercentage": {
            "type": "number",
            "description": "The discount percentage that should be automatically applied to all transactions\nassociated with the loyalty plan for customers with this membership level.\n"
          },
          "attainmentPoints": {
            "type": "integer",
            "description": "The number of points given to the customer when this level is attained.",
            "format": "int32"
          },
          "usePointsThreshold": {
            "type": "boolean",
            "description": "Indicates whether automatic upgrades and downgrades use point thresholds\nfor customers of this membership level.\n"
          },
          "minPointsThreshold": {
            "type": "integer",
            "description": "If thresholds are in use, indicates the minimum points required to have\nthe membership level.\n",
            "format": "int32"
          },
          "pointsLifespanDays": {
            "type": "integer",
            "description": "If automatic point expiries are enabled, indicates the lifespan of a\npoint.  Some points may be retained after their lifespan ends if the\ncustomer remains active and the plan is configured to skip the\nautomatic expiry for active customers.\n",
            "format": "int32"
          },
          "membershipLifespanDays": {
            "type": "integer",
            "description": "The number of days that comprise the lifespan of a membership.  After the\ncustomer has reached the end of the lifespan, they become eligible for\nautomatic terminations, if those are enabled.\n",
            "format": "int32"
          },
          "membershipStyles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipStyle"
            },
            "description": "The renewal and enrollment styles for the membership"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A membership type definition for a loyalty plan.\nAll current memberships are included regardless of the setting that\ngoverns whether a given type can be assigned to a customer from\nan external application.\nMembership types from past or future versions are excluded.\n"
      },
      "LoyaltyPlan": {
        "title": "LoyaltyPlan",
        "type": "object",
        "description": "A loyalty plan definition.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID number assigned to the loyalty plan.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the loyalty plan."
          },
          "code": {
            "type": "string",
            "description": "The optional code assigned to the loyalty plan."
          },
          "planStartDate": {
            "type": "string",
            "description": "Indicates the date on which the plan started or will start.",
            "format": "date"
          },
          "accumulatePoints": {
            "type": "boolean",
            "description": "Indicates whether the plan is a point-earning plan."
          },
          "currentTransactionPointsAvailableImmediately": {
            "type": "boolean",
            "description": "Indicates whether the points earned from the current transaction are included in the available points for redemption.\nWhen true, and the availablePointsForCurrentTransaction field isn't present, the caller should to use the 'available points'\nvalue from the POST Loyalty Transaction response which includes the points from the current transaction. \nWhen false, the caller should use the 'before' value in the original GET membership response.\n"
          },
          "membershipTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipType"
            },
            "description": "The membership types available in the plan version."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NameTranslationDictionary"
            },
            "description": "A dictionary of translations for the name field.",
            "example": {
              "langCode1": {
                "name": "string"
              },
              "langCode2": {
                "name": "string"
              }
            }
          }
        }
      },
      "LoyaltyPlanList": {
        "title": "LoyaltyPlanList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyPlan"
            },
            "description": ""
          }
        }
      },
      "RewardReason": {
        "title": "RewardReason",
        "type": "object",
        "properties": {
          "loyaltyPlanId": {
            "type": "integer",
            "description": "The ID of the loyalty plan for which the reward reason type applies.",
            "format": "int32"
          },
          "reasonTypeCode": {
            "type": "string",
            "description": "The type code associated with the reward reason.  Only defined for\nRedemptions, Reversals, and Adjustments.\n"
          },
          "description": {
            "type": "string",
            "description": "The description of the reason type.  Only defined for Rewdemptions,\nReversals, and Adjustments.\n"
          },
          "rewardCategory": {
            "type": "string",
            "description": "The reward category associated with the reward reason type.",
            "enum": [
              "Adjustment",
              "Redemption",
              "Reversal"
            ]
          },
          "redemptionType": {
            "type": "string",
            "description": "For redemption reason types only, identifies the type of redemption associated\nwith the reason code.\n",
            "enum": [
              "ManualReward",
              "PercentageOfPoints",
              "PercentageOfTransaction",
              "FlatAmountFixed",
              "FlatAmountVariable"
            ]
          },
          "requiredPoints": {
            "type": "integer",
            "description": "For redemption reason types only, identifies the number of available points\nthat the customer must have before they qualify for the redemption.\n",
            "format": "int32"
          },
          "pointsToDeduct": {
            "type": "integer",
            "description": "The number of points to deduct for non-variable redemptions.",
            "format": "int32"
          },
          "pointsToAdd": {
            "type": "integer",
            "description": "Number of points to add for adjustments only.",
            "format": "int32"
          },
          "discountPercentage": {
            "type": "number",
            "description": "The percentage discount applied for Percentage of Transaction redemptions."
          },
          "deductionCalculationPercentage": {
            "type": "number",
            "description": "The percentage used to calculate the number of points to deduct for\nVariable Flat Amount redemptions.  The discount amount requested is divided\nby the decimal version of the specified percentage to obtain the points to deduct.\n"
          },
          "rewardPercentage": {
            "type": "number",
            "description": "The percentage used to calculate the reward amount for for Percentage of\nPoints redemptions.  The customer's available points are multiplied by the\npercentage to obtain the amount of the reward.\n"
          },
          "deductAllPointsFlag": {
            "type": "boolean",
            "description": "Indicates whether a redemption will deduct all of a customer's points.\nGenerally used only for cashback programs that use a Percentage of Points\ntype of redemption.\n"
          },
          "rewardResult": {
            "type": "string",
            "description": "Indicates the result of a redemption.",
            "enum": [
              "Coupon",
              "ImmediateDiscount",
              "Certificate"
            ]
          },
          "maximumRewardValue": {
            "type": "number",
            "description": "The maximum discount amount permitted for a Percentage of Transaction\nredemption.\n"
          },
          "rewardAmount": {
            "type": "number",
            "description": "The discount amount for a Fixed Flat Amount redemption."
          },
          "generateCertificateNumber": {
            "type": "boolean",
            "description": "Indicates whether a redemption should generate a certificate number.\nThe certificate number will get stored on the redemption entry.\n"
          },
          "appendCheckDigit": {
            "type": "boolean",
            "description": "Indicates whether the certificate number should contain a check-digit."
          },
          "certificateNumberLength": {
            "type": "number",
            "description": "Indicates the length of the certificate number to generate, including\nthe prefix.\n"
          },
          "certificateNumberPrefix": {
            "type": "string",
            "description": "Indicates the prefix to use on the certificate number."
          },
          "lastCertificateNumber": {
            "type": "string",
            "description": "Indicates the last certificate number generated for a reason type."
          },
          "minTransactionAmount": {
            "type": "number",
            "description": "Indicates the minimum transaction amount required in order for a redemption\nreason type code to be allowed.\n"
          },
          "mayNotUseWithOtherPlanRedemptions": {
            "type": "boolean",
            "description": "Indicates whether this redemption reason code may be used together\nwith other redemptions from different plans.\n"
          },
          "includeMerchItemsOnly": {
            "type": "boolean",
            "description": "Indicates whether the minTransactionAmount includes merchandise items only."
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the reason type is available for new loyalty transactions.\nInactive entries may not be used when posting a loyalty transaction, but they\nmay appear on historical loyalty transactions.\n"
          },
          "isSystem": {
            "type": "boolean",
            "description": "Indicates whether the reason type is system-reserved.  System-reserved\nentries may not be used when posting a loyalty transaction.\n"
          },
          "membershipTypeCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The membership type codes that may use the redemption reason type."
          },
          "convertedAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardReasonCurrencyConversions"
            },
            "description": "The amount fields converted into various currencies."
          },
          "isAutomatic": {
            "type": "boolean",
            "description": "Indicates whether the reason type is associated with at least one automatic redemption\ndefinition that are currently active (not ended).\n"
          },
          "allowIndividualRedemption": {
            "type": "boolean",
            "description": "Indicates whether the reason type may be used in an individual redemption.\nIncludes reason types where is_restricted = 0 as well as those where is_restricted = 1\nAND allow_individual_redemption = 1.\n"
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        },
        "description": "A reward reason type definition associated with a loyalty plan."
      },
      "RewardReasonCurrencyConversions": {
        "title": "RewardReasonCurrencyConversions",
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "The currency associated with the converted amount."
          },
          "maximumRewardValue": {
            "type": "number",
            "description": "The maximum reward value in a given currency."
          },
          "rewardAmount": {
            "type": "number",
            "description": "The reward amount in a given currency."
          },
          "minTransactionAmount": {
            "type": "number",
            "description": "The minimum spend amount in a given currency."
          }
        },
        "description": "The amount fields for a given reason type converted into supported currencies."
      },
      "RewardReasonList": {
        "title": "RewardReasonList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardReason"
            },
            "description": ""
          }
        }
      },
      "DescriptionTranslationDictionary": {
        "title": "DescriptionTranslationDictionary",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "NameTranslationDictionary": {
        "title": "NameTranslationDictionary",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "TransactionSourceTranslationDictionary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DescriptionTranslationDictionary"
          },
          {
            "title": "TransactionSourceTranslationDictionary"
          },
          {
            "type": "object",
            "properties": {
              "short_description": {
                "type": "string"
              }
            }
          }
        ]
      },
      "AttributeGroupTranslationDictionary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DescriptionTranslationDictionary"
          },
          {
            "title": "AttributeGroupTranslationDictionary"
          },
          {
            "type": "object",
            "properties": {
              "codeLabel": {
                "type": "string"
              },
              "commentLabel": {
                "type": "string"
              },
              "dateLabel": {
                "type": "string"
              },
              "valueLabel": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CountryConfigurationTranslationDictionary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NameTranslationDictionary"
          },
          {
            "title": "CountryConfigurationTranslationDictionary"
          },
          {
            "type": "object",
            "properties": {
              "addressLine1Label": {
                "type": "string"
              },
              "addressLine2Label": {
                "type": "string"
              },
              "addressLine3Label": {
                "type": "string"
              },
              "addressLine4Label": {
                "type": "string"
              },
              "addressLine5Label": {
                "type": "string"
              },
              "addressLine6Label": {
                "type": "string"
              },
              "postalCodeLabel": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SegmentDefinition": {
        "title": "SegmentDefinition",
        "type": "object",
        "properties": {
          "segmentationCodeALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeADefault": {
            "type": "string",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationCodeBDefault": {
            "type": "string",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationCodeCDefault": {
            "type": "string",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationCodeDDefault": {
            "type": "string",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationCodeACodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentCodeDefinition"
            },
            "description": "A list of the segmentation codes for the given segment."
          },
          "segmentationCodeBCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentCodeDefinition"
            },
            "description": "A list of the segmentation codes for the given segment."
          },
          "segmentationCodeCCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentCodeDefinition"
            },
            "description": "A list of the segmentation codes for the given segment."
          },
          "segmentationCodeDCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentCodeDefinition"
            },
            "description": "A list of the segmentation codes for the given segment."
          },
          "segmentationValueALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueADefault": {
            "type": "number",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationValueBDefault": {
            "type": "number",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationValueCDefault": {
            "type": "number",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationValueDDefault": {
            "type": "number",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagELabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagFLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagADefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagBDefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagCDefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagDDefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagEDefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationFlagFDefault": {
            "type": "boolean",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationDateALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationDateBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationDateADefault": {
            "type": "string",
            "format": "date",
            "description": "The default value for this Segmentation variable."
          },
          "segmentationDateBDefault": {
            "type": "string",
            "format": "date",
            "description": "The default value for this Segmentation variable."
          },
          "language": {
            "type": "string",
            "description": "The language of the values for the segmentation labels."
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SegmentDefinitionTranslationDictionary"
            },
            "description": "A dictionary of translations for the labels, indexed by RFC 5646 language code.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "SegmentDefinitionTranslationDictionary": {
        "title": "SegmentDefinitionTranslation",
        "type": "object",
        "properties": {
          "segmentationCodeALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationCodeDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationValueDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagCLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagDLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagELabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationFlagFLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationDateALabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          },
          "segmentationDateBLabel": {
            "type": "string",
            "description": "The label for this Segmentation variable in the specified language."
          }
        }
      },
      "SegmentCodeDefinition": {
        "title": "SegmentCodeDefinition",
        "type": "object",
        "properties": {
          "segmentationCode": {
            "type": "string",
            "description": "The code associated with the segmentation."
          },
          "description": {
            "type": "string",
            "description": "The description of the segmentation in the specified language."
          },
          "sequenceNumber": {
            "type": "number",
            "description": "A optional sequence number for the segmentation codes."
          },
          "language": {
            "type": "string",
            "description": "The language of the description."
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description, indexed by RFC 5646 language code.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "ActivityOccurrence": {
        "title": "ActivityOccurrence",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The code of the division corresponding to the occurrences summary."
          },
          "salesChannelCode": {
            "type": "string",
            "description": "The code of the sales channel corresponding to the occurrences summary."
          },
          "firstPurchaseAmount": {
            "type": "number",
            "description": "The amount of the customer's first purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "firstPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's first purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "firstPurchaseStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's first purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "firstPurchaseDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's first purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "lastPurchaseAmount": {
            "type": "number",
            "description": "The amount of the customer's last purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "lastPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's last purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "lastPurchaseStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's last purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "lastPurchaseDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's last purchase. \nA purchase is a transaction where either the total is \ngreater than zero or where all lines are discounted to zero.\n"
          },
          "firstReturnAmount": {
            "type": "number",
            "description": "The amount of the customer's first return. \nA return is a transaction where the total is less than zero.\n"
          },
          "firstReturnDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's first return. \nA return is a transaction where the total is less than zero.\n"
          },
          "firstReturnStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's first return. \nA return is a transaction where the total is less than zero.\n"
          },
          "firstReturnDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's first return. \nA return is a transaction where the total is less than zero.\n"
          },
          "lastReturnAmount": {
            "type": "number",
            "description": "The amount of the customer's last return. \nA return is a transaction where the total is less than zero.\n"
          },
          "lastReturnDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's last return. \nA return is a transaction where the total is less than zero.\n"
          },
          "lastReturnStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's last return. \nA return is a transaction where the total is less than zero.\n"
          },
          "lastReturnDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's last return. \nA return is a transaction where the total is less than zero.\n"
          },
          "firstEvenExchangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's first even exchange.  \nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "firstEvenExchangeStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's first even exchange.\nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "firstEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's first even exchange.\nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "lastEvenExchangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's last even exchange.\nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "lastEvenExchangeStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's last even exchange.\nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "lastEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's last even exchange.\nAn even exchange is a transaction where the total is equal to 0\nand at least one transaction line is greater than 0.\n"
          },
          "highestPurchaseAmount": {
            "type": "number",
            "description": "The amount of the customer's highest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "highestPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's highest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "highestPurchaseStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's highest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "highestPurchaseDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's highest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "lowestPurchaseAmount": {
            "type": "number",
            "description": "The amount of the customer's lowest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "lowestPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's lowest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "lowestPurchaseStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's lowest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "lowestPurchaseDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's lowest purchase. \nA purchase is a transaction where the total is greater than zero or is \nequal to zero and contains only items that were discounted to zero.\n"
          },
          "firstTransactionAmount": {
            "type": "number",
            "description": "The amount of the customer's first transaction. \nThe first transaction includes purchases, returns, and even exchanges.\n"
          },
          "firstTransactionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a customer's first transaction.\nThe first transaction includes purchases, returns, and even exchanges.\n"
          },
          "firstTransactionStoreNumber": {
            "type": "integer",
            "description": "The store of a customer's first transaction.\nThe first transaction includes purchases, returns, and even exchanges.\n"
          },
          "firstTransactionDivisionCode": {
            "type": "string",
            "description": "The code of the division of a customer's first transaction.\nThe first transaction includes purchases, returns, and even exchanges.\n"
          },
          "lastTransactionAmount": {
            "type": "number",
            "description": "The amount of the customer's last transaction.\nThe last transaction includes purchases, returns, and even exchanges.\n"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the customer's last transaction.\nThe last transaction includes purchases, returns, and even exchanges.\n"
          },
          "lastTransactionStoreNumber": {
            "type": "integer",
            "description": "The store of the customer's last transaction.\nThe last transaction includes purchases, returns, and even exchanges.\n"
          },
          "lastTransactionDivisionCode": {
            "type": "string",
            "description": "The code of the division of the customer's last transaction.\nThe last transaction includes purchases, returns, and even exchanges.\n"
          }
        }
      },
      "ActivitySummary": {
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The code of the division to which the activity summary totals apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "salesChannelCode": {
            "type": "string",
            "description": "The code of the sales channel to which the activity summary totals apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "year": {
            "type": "integer",
            "description": "The year for which the activity summary totals apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "month": {
            "type": "integer",
            "description": "The month for which the activity summary totals apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "week": {
            "type": "integer",
            "description": "The week for which the activity summary totals apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "storeNumber": {
            "type": "integer",
            "description": "The number of the store for which the activity summary total apply. Field will only be present in the response if it corresponds to the requested mode"
          },
          "periodNumber": {
            "type": "integer",
            "description": "The period number contain the value that identifies the specific period.\nif we're running it on 'Year-HalfYear', then this field holds values such a: '2021-H1', '2020-H2', etc\nif we're running it on 'Last 12 months', then we show values such as 'Last 1-12 months', 'Last 13-24 months, etc.\n"
          },
          "periodName": {
            "type": "string",
            "description": "The name of the period for which the activity summary totals apply."
          },
          "grossRetail": {
            "type": "number",
            "description": "The sum of positive item amounts for the period.  \nIncludes header-only transactions where the header amount is greater than zero.\n"
          },
          "returnRetail": {
            "type": "number",
            "description": "The sum of negative item amounts for the period.\nIncludes header-only transactions where the header amount is less than zero.\n"
          },
          "netRetail": {
            "type": "number",
            "description": "The sum of all item amounts for the period. \nIncludes header-only transactions.\n"
          },
          "grossRetailHavingCost": {
            "type": "number",
            "description": "The sum of positive items having a non-zero cost.\nExcludes header-only transactions.\n"
          },
          "returnRetailHavingCost": {
            "type": "number",
            "description": "The sum of negative items having a non-zero cost.\nExcludes header-only transactions.\n"
          },
          "netRetailHavingCost": {
            "type": "number",
            "description": "The sum of all items having a non-zero cost.\nExcludes header-only transactions.\n"
          },
          "grossCost": {
            "type": "number",
            "description": "The sum of the merchandise cost for items with a positive amount."
          },
          "returnCost": {
            "type": "number",
            "description": "The sum of the merchandise cost for items with a negative amount."
          },
          "netCost": {
            "type": "number",
            "description": "The sum of the merchandise cost for all items."
          },
          "marginAmount": {
            "type": "number",
            "description": "The sum of the margin amount on all qualifying items. A parameter \ngoverns whether zero-cost items are included in this total.\n"
          },
          "markdownAmount": {
            "type": "number",
            "description": "The sum of the markdown amounts on all items."
          },
          "grossPromoRetail": {
            "type": "number",
            "description": "The sum of the positive item amounts for transaction lines which \nare linked to campaigns.\nExcludes header-only transactions.\n"
          },
          "returnPromoRetail": {
            "type": "number",
            "description": "The sum of the negative item amounts for transaction lines which \nare linked to campaigns.\nExcludes header-only transactions.\n"
          },
          "netPromoRetail": {
            "type": "number",
            "description": "The sum of all item amounts for transaction lines which\nare linked to campaigns.\n"
          },
          "grossNonPromoRetail": {
            "type": "number",
            "description": "The sum of the positive item amounts for transaction lines that are not linked \nto a campaign but are on the same transaction as items that are linked to a campaign.\n"
          },
          "returnNonPromoRetail": {
            "type": "number",
            "description": "The sum of the negative item amounts for transaction lines that are not linked \nto a campaign but are on the same transaction as items that are linked to a campaign.\n"
          },
          "netNonPromoRetail": {
            "type": "number",
            "description": "The sum of all item amounts for transaction lines that are not linked \nto a campaign but are on the same transaction as items that are linked to a campaign.\n"
          },
          "grossOutsidePromoRetail": {
            "type": "number",
            "description": "The sum of positive item amounts that appear on transactions \nwithout a campaign link.\n"
          },
          "returnOutsidePromoRetail": {
            "type": "number",
            "description": "The sum of negative item amounts that appear on transactions \nwithout a campaign link.\n"
          },
          "netOutsidePromoRetail": {
            "type": "number",
            "description": "The sum of all item amounts that appear on transactions \nwithout a campaign link.\n"
          },
          "avgUnitsPerTransaction": {
            "type": "number",
            "description": "The average number of units per transaction. \n(purchasedUnits divided by totalTransactions)\n"
          },
          "avgUnitsPerVisit": {
            "type": "number",
            "description": "The average number of units per visit, where a visit is the sum \nof all transactions in the same store on the same date.\n(purchasedUnits divided by totalVisits)\n"
          },
          "avgUnitRetail": {
            "type": "number",
            "description": "The average price of each unit.\n(netRetail divided by netUnits)\n"
          },
          "avgUnitRetailHavingCost": {
            "type": "number",
            "description": "The average price of each unit having a non-zero cost.\n(netRetailHavingCost divided by netUnitsHavingCost)\n"
          },
          "avgUnitMargin": {
            "type": "number",
            "description": "The average margin of each unit.\n(marginAmount divided by netUnits)\n"
          },
          "avgTransactionRetail": {
            "type": "number",
            "description": "The average amount of each transaction.\n(netRetail divided by totalTransactions)\n"
          },
          "avgTransactionRetailHavingCost": {
            "type": "number",
            "description": "The average amount of each transaction excluding items with zero cost.\n(netRetailHavingCost divided by totalTransactions) \n"
          },
          "avgTransactionMargin": {
            "type": "number",
            "description": "The average margin amount for each transaction.\n(marginAmount divided by totalTransactions)\n"
          },
          "avgTransactionsPerVisit": {
            "type": "number",
            "description": "The average transactions number on each visit.\n"
          },
          "avgVisitRetail": {
            "type": "number",
            "description": "The average amount of each visit, where a visit is the sum of transactions \nin the same store on the same date.\n(netRetail divided by totalVisits)\n"
          },
          "avgVisitRetailHavingCost": {
            "type": "number",
            "description": "The average amount of each visit excluding items with zero cost, \nwhere a visit is the sum of transactions in the same store on the same date. \n(netRetailHavingCost divided by totalVisits) \n"
          },
          "avgVisitMargin": {
            "type": "number",
            "description": "The average margin amount of each visit excluding items with zero cost, \nwhere a visit is the sum of transactions in the same store on the same date. \n(marginAmount divided by totalVisits)\n"
          },
          "purchasedPromoUnits": {
            "type": "integer",
            "description": "The number of purchased units linked to a campaign."
          },
          "returnPromoUnits": {
            "type": "integer",
            "description": "The number of returned units linked to a campaign."
          },
          "netPromoUnits": {
            "type": "integer",
            "description": "The number of net units linked to a campaign."
          },
          "purchasedNonPromoUnits": {
            "type": "integer",
            "description": "The number of purchased units that are not linked to a campaign\nbut are on the same transaction as items that are linked to a campaign.\n"
          },
          "returnNonPromoUnits": {
            "type": "integer",
            "description": "The number of returned units that are not linked to a campaign\nbut are on the same transaction as items that are linked to a campaign.\n"
          },
          "netNonPromoUnits": {
            "type": "integer",
            "description": "The net number of units that are not linked to a campaign\nbut are on the same transaction as items that are linked to a campaign.\n"
          },
          "purchasedOutsidePromoUnits": {
            "type": "integer",
            "description": "The number of purchased units on transactions without a campaign link.\n"
          },
          "returnOutsidePromoUnits": {
            "type": "integer",
            "description": "The number of returned units on transactions without a campaign link.\n"
          },
          "netOutsidePromoUnits": {
            "type": "integer",
            "description": "The net number of units on transactions without a campaign link.\n"
          },
          "purchasedUnits": {
            "type": "integer",
            "description": "The number of purchased units."
          },
          "returnedUnits": {
            "type": "integer",
            "description": "The number of returned units."
          },
          "netUnits": {
            "type": "integer",
            "description": "The net number of units."
          },
          "purchasedUnitsHavingCost": {
            "type": "integer",
            "description": "The number of purchased units where the cost is not zero."
          },
          "returnedUnitsHavingCost": {
            "type": "integer",
            "description": "The number of returned units where the cost is not zero."
          },
          "netUnitsHavingCost": {
            "type": "integer",
            "description": "The net number of units where the cost is not zero."
          },
          "purchaseTransactions": {
            "type": "integer",
            "description": "The number of transactions where the amount is greater than zero \nOR where all lines are discounted down to zero.\n"
          },
          "returnTransactions": {
            "type": "integer",
            "description": "The number of transactions where the amount is less than zero.\n"
          },
          "evenExchangeTransactions": {
            "type": "integer",
            "description": "The number of transactions where the amount is equal to zero, except\ntransactions where all lines are discounted to zero.\n"
          },
          "totalTransactionsIncludeExchange": {
            "type": "integer",
            "description": "The total number of transactions, including even exchanges.\n(purchasedTransactions + returnTransactions + evenExchangeTransactions)\n"
          },
          "totalTransactions": {
            "type": "integer",
            "description": "The total number of transactions, excluding even exchanges.\n(purchasedTransactions + returnTransactions)\n"
          },
          "totalUnits": {
            "type": "integer",
            "description": "The total number of purchased units.\n"
          },
          "totalVisits": {
            "type": "integer",
            "description": "The total number of vists. A visit consists of all transactions \non the same date in the same store.\n"
          },
          "marginPercent": {
            "type": "number",
            "description": "The margin percent across transactions.  A parameter determines if zero-cost items are\nincluded in the formula.\n(netRetail - netCost) / netRetail) * 100\nOR\n(netRetaiHavingl - netCost) / netRetailHavingCost) * 100\n"
          },
          "markdownPercent": {
            "type": "number",
            "description": "The markdown percent across transactions.\n(markdownAmount / (grossRetail + markdownAmount)) * 100 \n"
          },
          "returnPercent": {
            "type": "number",
            "description": "The return percent across transactions.\n(returnRetail / grossRetail) * 100\n"
          }
        }
      },
      "ActivityOccurrenceResultsPage": {
        "title": "ActivityOccurrenceResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityOccurrence"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ActivityOccurrenceLabels": {
        "title": "ActivityOccurrenceLabels",
        "type": "object",
        "properties": {
          "firstPurchaseAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstPurchaseDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstPurchaseStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstPurchaseDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastPurchaseAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastPurchaseStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastPurchaseDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstReturnAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstReturnDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstReturnStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstReturnDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastReturnAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastReturnDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastReturnStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastReturnDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstEvenExchangeDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstEvenExchangeStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastEvenExchangeDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastEvenExchangeStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "highestPurchaseAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "highestPurchaseDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "highestPurchaseStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "highestPurchaseDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lowestPurchaseAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lowestPurchaseDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lowestPurchaseStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lowestPurchaseDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstTransactionAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstTransactionDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstTransactionStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "firstTransactionDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastTransactionAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastTransactionDate": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastTransactionStoreNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "lastTransactionDivisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "language": {
            "type": "string",
            "description": "The language of the values for the segmentation labels."
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivityOccurrenceLabelsTranslationDictionary"
            },
            "description": "A dictionary of translations for the labels, indexed by RFC 5646 language code."
          }
        },
        "description": "The labels to display for the various activity summary fields.\n"
      },
      "ActivitySummaryLabels": {
        "title": "ActivitySummaryLabels",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "salesChannelCode": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "year": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "periodNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "storeNumber": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "periodName": {
            "type": "string",
            "description": "The label to display for this activity summary field.\n"
          },
          "grossRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "grossRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "grossCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "marginAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "markdownAmount": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "grossPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "grossNonPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnNonPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netNonPromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "grossOutsidePromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnOutsidePromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netOutsidePromoRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgUnitsPerTransaction": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgUnitsPerVisit": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgUnitRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgUnitRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgUnitMargin": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgTransactionRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgTransactionRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgTransactionMargin": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgTransactionsPerVisit": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgVisitRetail": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgVisitRetailHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "avgVisitMargin": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchasedPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchasedNonPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnNonPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netNonPromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchasedOutsidePromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnOutsidePromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netOutsidePromoUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchasedUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnedUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchasedUnitsHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnedUnitsHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "netUnitsHavingCost": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "purchaseTransactions": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnTransactions": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "evenExchangeTransactions": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "totalTransactionsIncludeExchange": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "totalTransactions": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "totalUnits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "totalVisits": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "marginPercent": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "markdownPercent": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "returnPercent": {
            "type": "string",
            "description": "The label to display for this activity summary field."
          },
          "language": {
            "type": "string",
            "description": "The language of the values for the segmentation labels."
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivitySummaryLabelsTranslationDictionary"
            },
            "description": "A dictionary of translations for the labels, indexed by RFC 5646 language code."
          }
        },
        "description": "The labels to display for the various activity summary fields."
      },
      "ActivitySummaryLabelsTranslationDictionary": {
        "title": "ActivitySummaryLabelsTranslationDictionary",
        "type": "object",
        "properties": {
          "divisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "salesChannelCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "year": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "periodNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "storeNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "periodName": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "marginAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "markdownAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossNonPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnNonPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netNonPromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "grossOutsidePromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnOutsidePromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netOutsidePromoRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgUnitsPerTransaction": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgUnitsPerVisit": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgUnitRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgUnitRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgUnitMargin": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgTransactionRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgTransactionRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgTransactionMargin": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgTransactionsPerVisit": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgVisitRetail": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgVisitRetailHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "avgVisitMargin": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchasedPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchasedNonPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnNonPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netNonPromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchasedOutsidePromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnOutsidePromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netOutsidePromoUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchasedUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnedUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchasedUnitsHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnedUnitsHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "netUnitsHavingCost": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "purchaseTransactions": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnTransactions": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "evenExchangeTransactions": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "totalTransactionsIncludeExchange": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "totalTransactions": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "totalUnits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "totalVisits": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "marginPercent": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "markdownPercent": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "returnPercent": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          }
        }
      },
      "ActivityOccurrenceLabelsTranslationDictionary": {
        "title": "ActivityOccurrenceLabelsTranslationDictionary",
        "type": "object",
        "properties": {
          "firstPurchaseAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstPurchaseDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstPurchaseStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstPurchaseDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastPurchaseAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastPurchaseStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastPurchaseDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstReturnAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstReturnDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstReturnStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstReturnDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastReturnAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastReturnDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastReturnStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastReturnDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstEvenExchangeDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstEvenExchangeStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastEvenExchangeDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastEvenExchangeStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastEvenExchangeDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "highestPurchaseAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "highestPurchaseDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "highestPurchaseStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "highestPurchaseDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lowestPurchaseAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lowestPurchaseDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lowestPurchaseStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lowestPurchaseDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstTransactionAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstTransactionDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstTransactionStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "firstTransactionDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastTransactionAmount": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastTransactionDate": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastTransactionStoreNumber": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          },
          "lastTransactionDivisionCode": {
            "type": "string",
            "description": "The translation for this label in the specified language."
          }
        }
      },
      "ActivitySummaryResultsPage": {
        "title": "CustomerSearchResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivitySummary"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerInteractionResultsPage": {
        "title": "CustomerInteractionResultsPage",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interaction"
            },
            "description": ""
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortEntry"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Interaction": {
        "type": "object",
        "properties": {
          "customerInteractionId": {
            "type": "integer",
            "format": "int32",
            "description": "The ID assigned to the customer-specific instance of the\ninteraction.  Ignored when posting a new interaction to a customer.\n"
          },
          "interactionId": {
            "type": "integer",
            "format": "int32",
            "description": "The ID assigned to the master interaction definition.\nWhen adding an interaction to a customer, either the interactionId\nor the externalInteractionCode must be provided to identify the \ninteraction being posted.  \nGenerally, the externalInteractionCode is preferable since it may\nbe used to auto-create new master interaction definitions.\n"
          },
          "externalInteractionCode": {
            "type": "string",
            "description": "The external interaction code assigned to the master interaction\ndefinition.\nWhen adding an interaction to a customer, either the interactionId\nor the externalInteractionCode must be provided to identify the \ninteraction being posted.  \nGenerally, the externalInteractionCode is preferable since it may\nbe used to auto-create new master interaction definitions.\n"
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the event that occurred.\nEither the eventId or the eventCode is required.\n"
          },
          "eventCode": {
            "type": "string",
            "description": "The code of the event that occurred.\nEither the eventId or the eventCode is required.\n"
          },
          "divisionCode": {
            "type": "string",
            "description": "The division that the customer interaction occurred in."
          },
          "numberOfOccurrences": {
            "type": "integer",
            "description": "The number of occurrences of the interaction for the customer."
          },
          "dateFirstOccurrence": {
            "type": "string",
            "format": "date-time",
            "description": "The date this interaction first occurred for the customer."
          },
          "dateLastOccurrence": {
            "type": "string",
            "format": "date-time",
            "description": "The date this interaction last occurred for the customer."
          },
          "interactionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionDetail"
            }
          },
          "interactionDefinition": {
            "description": "Contains the master interaction definition.  \nWhen posting a customer interaction where the master interaction\ndoes not yet exist, the values in this section will be used to \nauto-create the master interaction definition.\n",
            "items": {
              "$ref": "#/components/schemas/InteractionDefinition"
            }
          }
        }
      },
      "InteractionList": {
        "title": "InteractionList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interaction"
            },
            "description": ""
          }
        }
      },
      "InteractionDetail": {
        "type": "object",
        "properties": {
          "instanceID": {
            "type": "integer",
            "description": "A system-assigned value to identify the instance of an interaction\non a customer.  These generally begin at 1 and increment each time\na new instance of a given interaction is posted.\n"
          },
          "storeNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The number of the store in which the customer interaction occurred.\n"
          },
          "associateNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The sales associate relevant to the customer interaction."
          },
          "interactionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the customer interaction occurred."
          },
          "sourceURL": {
            "type": "string",
            "description": "The URL that the shopper visited before arriving at the tracked site.\n"
          },
          "departingURL": {
            "type": "string",
            "description": "The URL that the shopper visited after the tracked site.\n"
          },
          "relatedURL": {
            "type": "string",
            "description": "The URL related to the current customer interaction."
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the customer interaction, in seconds."
          },
          "comment1": {
            "type": "string",
            "description": "The first comment relating to the customer interaction."
          },
          "comment2": {
            "type": "string",
            "description": "The second comment relating to the customer interaction."
          },
          "comment3": {
            "type": "string",
            "description": "The third comment relating to the customer interaction."
          },
          "amount": {
            "type": "number",
            "description": "The amount related to the customer interaction."
          }
        }
      },
      "InteractionCampaign": {
        "title": "InteractionCampaign",
        "type": "object",
        "description": "An interaction campaing.",
        "properties": {
          "campaignID": {
            "type": "integer",
            "description": "The ID of the campaigns linked to the transaction line.",
            "format": "int32"
          },
          "campaignDescription": {
            "type": "string",
            "readOnly": true,
            "description": "The description of the campaigns linked to the transaction line."
          },
          "campaignListCode": {
            "type": "integer",
            "description": "The campaign list code associated with the interaction.",
            "format": "int32"
          }
        }
      },
      "InteractionDefinition": {
        "title": "InteractionDefinition",
        "type": "object",
        "description": "An interaction definition.",
        "properties": {
          "interactionID": {
            "type": "integer",
            "description": "The system-generated ID identifying the master interaction definition.\n",
            "format": "int32"
          },
          "interactionDescription": {
            "type": "string",
            "description": "The description of the master interaction."
          },
          "externalInteractionCode": {
            "type": "string",
            "description": "A user-defined code identifying the interaction.\n"
          },
          "interactionType": {
            "type": "string",
            "description": "The type associated with the master interaction definition.\nMust match a defined type.\n"
          },
          "interactionSubType": {
            "type": "string",
            "description": "The subtype associated with the master interaction definition.\nMust match a defined subtype.\n"
          },
          "offerCode": {
            "type": "string",
            "description": "The offer code associated with the master interaction definition."
          },
          "creativeVersion": {
            "type": "string",
            "description": "The creative version associated with the master interaction definition."
          },
          "imageURL": {
            "type": "string",
            "description": "The URL of the image used on the interaction."
          },
          "deliveryDate": {
            "type": "string",
            "description": "The delivery date associated with the interaction definition.",
            "format": "date"
          },
          "costPerCustomer": {
            "type": "integer",
            "description": "The cost per customer associated with the interaction.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "The status of the interaction definition.\n"
          },
          "activationDate": {
            "type": "string",
            "description": "The date the interaction was made active.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "The date the interaction was made inactive.",
            "format": "date-time"
          },
          "autoArchiveEnabled": {
            "type": "boolean",
            "description": "Indicates whether the interaction is set to automatically archive\ncustomer interactions after a defined time period.\n"
          },
          "autoArchiveDays": {
            "type": "integer",
            "description": "Indicates the number of days after which customer interactions\nget archived.\n",
            "format": "int32"
          },
          "autoArchiveRetainSummary": {
            "type": "boolean",
            "description": "Indicates whether summary rows are to be retained during the\nautomatic archive process.  \n"
          },
          "createUser": {
            "type": "string",
            "readOnly": true,
            "description": "The user who created the interaction definition.\n"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The user who created the interaction definition.  \n"
          },
          "modifyUser": {
            "type": "string",
            "readOnly": true,
            "description": "The user who last modified the interaction definition.\n"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The user who last modified the interaction definition. \n"
          },
          "divisionCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The divisions in which the interaction is valid."
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionCampaign"
            },
            "description": "The campaigns and lists associated with the interaction."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "InteractionDefinitionList": {
        "title": "InteractionDefinitionList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionDefinition"
            },
            "description": ""
          }
        }
      },
      "InteractionEvent": {
        "type": "object",
        "properties": {
          "interactionEventID": {
            "type": "integer",
            "description": "The system-assigned ID associated with an event."
          },
          "interactionEventCode": {
            "type": "string",
            "description": "The code associated with the interaction event."
          },
          "interactionEventDescription": {
            "type": "string",
            "description": "The description of the interaction event."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "InteractionEventList": {
        "title": "InteractionEventList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionEvent"
            },
            "description": ""
          }
        }
      },
      "InteractionSubType": {
        "type": "object",
        "properties": {
          "interactionSubTypeCode": {
            "type": "string"
          },
          "interactionSubTypeDescription": {
            "type": "string",
            "description": "The description of the interaction sub-type."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "InteractionSubTypeList": {
        "title": "InteractionSubTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionSubType"
            },
            "description": ""
          }
        }
      },
      "InteractionType": {
        "type": "object",
        "properties": {
          "interactionTypeCode": {
            "type": "string"
          },
          "interactionTypeDescription": {
            "type": "string",
            "description": "The description of the interaction type."
          },
          "language": {
            "type": "string",
            "description": "The language of the description field.\n"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DescriptionTranslationDictionary"
            },
            "description": "A dictionary of translations for the description field.",
            "example": {
              "langCode1": {
                "description": "string"
              },
              "langCode2": {
                "description": "string"
              }
            }
          }
        }
      },
      "InteractionTypeList": {
        "title": "InteractionTypeList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InteractionType"
            },
            "description": ""
          }
        }
      },
      "CacheStatus": {
        "title": "CacheStatus",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of cache currently in use."
          },
          "count": {
            "type": "integer",
            "description": "The number of items currently in the cache.",
            "format": "int32"
          }
        }
      },
      "PingResponse": {
        "title": "PingResponse",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "dataFilter": {
        "title": "dataFilter",
        "enum": [
          "CallerDivisionOnly",
          "CallerDivisionWithPrimaryContactsOnly"
        ],
        "type": "string"
      }
    }
  }
}